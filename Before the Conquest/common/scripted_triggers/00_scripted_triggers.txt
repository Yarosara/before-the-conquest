####TRAIT GROUP TRIGGERS####
#If you make changes, update the "Trait group triggers CK2" spreadsheet

#Agreeable
#has_benevolent_trait_trigger		Has a benevolent trait.
#is_benevolent_trigger				Has a benevolent trait and not any evil traits.
#has_pleasant_trait_trigger			Has a pleasant personality trait. 
#has_pleasant_personality_trigger	Has a pleasant personality trait and not any unpleasant personality traits.
#has_pious_trait_trigger			Has a piety trait.
#is_pious_trigger					Has a piety trait and not any impious traits.
#has_virtue_trigger					Has a virtue trait.

#Disagreeable
#has_evil_trait_trigger				Has an evil trait.
#is_evil_trigger					Has an evil trait and not any benevolent traits.
#has_unpleasant_trait_trigger		Has an unpleasant personality trait. 
#has_unpleasant_personality_trigger	Has an  unpleasant personality trait and not any pleasant personality traits.
#has_impious_trait_trigger			Has an impious trait.
#is_impious_trigger					Has a impious trait and not any piety traits.
#has_vice_trigger					Has a vice trait.

#Attractiveness
#has_attractive_trait_trigger		Has a sex appeal trait.
#is_attractive_trigger				Has a sex appeal trait and not any traits with negative sex appeal.
#has_unattractive_trait_trigger		Has a negative sex appeal trait.
#is_unattractive_trigger			Has a negative sex appeal trait and not any traits with sex appeal.

#Health/congential
#is_smart_trigger					Has a smart trait.
#is_dumb_trigger					Has a dumb trait.
#is_strong_trigger					Has a strong trait.
#is_weak_trigger					Has a weak trait.
#character_disease_trigger			Has a disease trait.
#has_symptom_trigger				Has a symptom trait.
#has_injury_trigger					Has an injury trait.
#is_maimed_trigger					Has a maimed trait
#has_severe_disability_trigger		Has a severe disability, which makes the characters life really hard.
#has_medium_disability_trigger		Has a medium disability, which limits the character to some extent but they can mostly live a full life.
#has_minor_disability_trigger		Has a minor disability, which does not limit the character in a physical sense, but is a source of ridicule and trauma.
#has_disability_trigger				Has a severe or light disability.
#has_mental_disorder_trigger		Has a mental disorder trait.
#has_fertile_trait_trigger			Has a fertile trait.
#is_fertile_trigger					Has a fertile trait and not any infertile traits.
#has_infertile_trait_trigger		Has an infertile trait.
#is_infertile_trigger				Has an infertile trait and not any fertile traits, OR is celibate OR is eunuch.
#has_negative_congenital_trigger	Has a negative congenital trait

#Diplomacy
#has_education_diplomacy_trigger	Has a diplomacy education trait.
#has_lifestyle_diplomacy_trigger	Has a diplomacy lifestyle trait.
#child_personality_diplomacy_triggerHas a child trait with diplomacy bonus.

#Martial
#has_education_martial_trigger		Has a martial education trait.
#has_lifestyle_martial_trigger		Has a martial lifestyle trait.
#child_personality_martial_trigger	Has a child trait with martial bonus.

#Stewardship
#has_education_stewardship_trigger	Has a stewardship education trait.
#has_lifestyle_stewardship_trigger	Has a stewardship  lifestyle trait.
#child_personality_stewardship_trigger	Has a child trait with stewardship bonus.

#Intrigue
#has_education_intrigue_trigger		Has a intrigue education trait.
#has_lifestyle_intrigue_trigger		Has a intrigue lifestyle trait.
#child_personality_intrigue_trigger	Has a child trait with intrigue bonus.

#Learning
#has_education_learning_trigger		Has a learning education trait.
#has_lifestyle_learning_trigger		Has a learning lifestyle trait.
#child_personality_learning_trigger	Has a child trait with learning bonus.
#is_learned_trigger					Has a scholarly trait, learning-oriented trait.

#Religion
#has_crusade_trait_trigger			Has a crusade type trait.
#has_secret_religion_trait_trigger	Has a secret religion trait.

####MERC LEADER/COUNCIL JOB####
#maester_culture_trigger
#can_be_castellan_trigger
#can_be_commander_trigger
#can_be_chancellor_trigger
#can_be_marshal_trigger
#can_be_treasurer_trigger
#can_be_spymaster_trigger
#can_be_physician_trigger
#can_be_spiritual_trigger
#can_be_advisor_trigger

###REAPER'S DUE####
# can_be_maimed_trigger
# physician_bad_trigger
# physician_good_trigger
# is_inaccessible_trigger
# prefers_men_trigger
# root_attraction_trigger #Returns yes when root is attracted the scoped character, based on sex
# attacted_to_root_trigger
# attacted_to_prev_trigger
# is_unimportant_trigger
# sad_example_trigger
# has_epidemic_disease_trigger
# developing_epidemic_disease_trigger
# can_be_prophet_of_doom_trigger

# death_murder_trigger
# death_murder_unknown_trigger
# death_murder_known_trigger
# death_execution_trigger
# death_sacrificed_trigger
# death_accident_trigger
# death_suicide_trigger
# block_general_event_trigger

###MONKS & MYSTICS###

# gender_equality_trigger
# has_prev_education_trigger
# useless_character_trigger

# true_religion_the_seven_trigger
# true_religion_old_gods_trigger
# true_religion_group_westerosi_religion_trigger
# true_religion_beyond_wall_old_gods_trigger
# true_religion_mountain_old_gods_trigger
# true_religion_thenn_rel_trigger
# true_religion_group_wildling_religion_trigger
# true_religion_drowned_god_trigger
# true_religion_rhllor_trigger
# true_religion_group_essos_group_trigger

# relationship_with_root_trigger
# family_of_root_trigger
# cousin_of_root_trigger
# sibling_of_root_trigger
# full_sibling_of_root_trigger
# sibling_child_of_root_trigger
# parent_sibling_of_root_trigger
# grandchild_of_root_trigger
# sibling_in_law_of_root_trigger

# is_murder_quest_target_of_prev_trigger
# assassins_appropriate_target_trigger
# interesting_face_trigger
# can_pay_assassins_debt
# is_rich_holding
# is_richer_holding

#has_society_currency_trivial_trigger
#has_society_currency_tiny_trigger
# has_society_currency_minor_trigger
# has_society_currency_medium_trigger
# has_society_currency_major_trigger

# is_ill_trigger
# is_devil_worshiper_trigger
# has_negative_congenital_trigger

# is_christian_monastic_member_trigger
# is_monastic_member_trigger
# is_ascetic_trigger
# is_virgin_trigger
# print_scope_trigger

# is_secret_religious_society_member_trigger
# is_openly_of_prevs_secret_religion_trigger
# is_openly_of_roots_secret_religion_trigger
# has_sympathy_for_true_religion_of_prev_trigger
# has_sympathy_for_true_religion_of_root_trigger
# ok_sr_induction_mission_target_trigger
# ok_sr_sympathy_mission_target_trigger
# has_prevs_secret_religion_truly_trigger
# has_roots_secret_religion_truly_trigger
# has_my_liege_secret_religion_truly_trigger
# is_in_prevs_interesting_society_trigger
# shares_prevs_secret_religion_trigger
# character_knows_prev_trigger
# shares_true_religion_group_with_prev_trigger
# is_openly_of_prevs_true_religion_group

# is_visible_to_self_trigger
# has_any_char_old_religion

# can_add_admin_bonus_trigger
# can_be_sabotaged_trigger

# has_assassins_prerequisites
# has_common_devilworship_prerequisites
# has_satanists_prerequisites
# has_trollcrafters_prerequisites
# has_cult_of_kali_prerequisites
# has_cold_ones_prerequisites
# has_plaguebringers_prerequisites
# same_society_rank_as_prev_trigger
# higher_society_rank_than_prev_trigger

# possibly_romantically_interested_in_ROOT_trigger
# ROOT_possibly_romantically_interested_trigger
# possibly_romantically_interested_in_each_other_trigger

# looting_artifact_event_religious_artifacts_trigger
# can_be_asked_to_leave_court_trigger

# has_a_seer_modifier_trigger
# has_an_omen_modifier_trigger
# has_positive_omen_modifier_trigger
# has_negative_omen_modifier_trigger
# has_battle_omen_modifier_trigger
# has_relationship_omen_modifier_trigger
# has_power_omen_modifier_trigger
# has_top_tier_education_trait_trigger
# has_childhood_horoscope_modifier_trigger

# is_born_in_january_trigger
# is_born_in_february_trigger
# is_born_in_march_trigger
# is_born_in_april_trigger
# is_born_in_may_trigger
# is_born_in_june_trigger
# is_born_in_july_trigger
# is_born_in_august_trigger
# is_born_in_september_trigger
# is_born_in_october_trigger
# is_born_in_november_trigger
# is_born_in_december_trigger
# is_born_under_Aries_trigger
# is_born_under_Taurus_trigger
# is_born_under_Gemini_trigger
# is_born_under_Cancer_trigger
# is_born_under_Leo_trigger
# is_born_under_Virgo_trigger
# is_born_under_Libra_trigger
# is_born_under_Scorpius_trigger
# is_born_under_Sagittarius_trigger
# is_born_under_Capricorn_trigger
# is_born_under_Aquarius_trigger
# is_born_under_Pisces_trigger
# is_romantic_zodiac_match_with_root_trigger
# is_romantic_zodiac_mismatch_with_root

# has_unsafe_secret_religion
# same_true_religion_as_from_trigger
# same_true_religion_as_root_trigger

##########
###AGOT###
##########
# has_valyrian_steel_sword_trigger

# ###Slavery

# has_slavery_religion_trigger
# has_slavery_culture_trigger
# has_antislavery_religion_trigger
# has_antislavery_culture_trigger
# has_full_slavery_trigger
# can_buy_courtier_slaves_trigger

# ###

# can_host_citadel_trigger

# can_inherit_titles_trigger
# can_press_claims_trigger
# can_marry_trigger

# is_summer_trigger
# is_winter_trigger

# eligible_trial_by_combat_champion_for_ROOT_trigger
# eligible_trial_by_combat_champion_for_FROM_trigger

# below_consort_limit_trigger
# allow_temple_buildings_trigger
# NOT_mythical_creature_trigger
# just_execution_reason_PREV_trigger
# is_in_interregnum_trigger
# demanded_trial_by_combat_trigger
# eligible_triarch_trigger
# can_use_dragon_conquest_trigger
# is_divine_blood_dynasty_trigger
# high_valyrian_dynasty_trigger
# is_coin_flip_dynasty_trigger
# is_weak_khal_trigger

# base_value_1_trigger
# base_value_2_trigger
# base_value_3_trigger
# base_value_4_trigger
# base_value_5_trigger
# base_value_6_trigger

# has_sympathy_trait_trigger
# can_be_kingsguard_candidate_trigger
# highborn_kingsguard_candidate_trigger
# nightswatch_culture_trigger

# magic_returned_trigger

# seniority_culture_trigger
# agnatic_culture_trigger
# true_cognatic_culture_trigger
# enatic_culture_trigger

# valid_exile_destination_ROOT_trigger

# has_tanned_skin_trigger
# has_bronzed_skin_trigger
# has_dark_skin_trigger
# has_copper_skin_trigger
# has_white_skin_trigger

# has_house_words_trigger
# has_chosen_syncretic_faith_trigger
# has_dragonpit_trigger
# cannot_outbreed_trigger
# has_alchemists_guild_prerequisites
# wearing_asshai_mask_trigger
# wearing_shadowlander_mask_trigger
# has_pilgrimage_trait_trigger
# has_bastard_nickname_trigger

# PREV_has_abused_opinion_trigger
# PREV_has_abused_relative_opinion_trigger
# PREV_has_murder_opinion_trigger
# PREV_has_attempted_murder_opinion_trigger
# PREV_has_treason_opinion_trigger
# PREV_has_adultery_opinion_trigger

# has_priest_trait_trigger
# traditional_nomad_territory_trigger

# has_black_nickname_prereq_trigger
# has_white_nickname_prereq_trigger
# has_crazed_nickname_prereq_trigger
# has_wroth_nickname_prereq_trigger
# has_red_nickname_prereq_trigger
# has_big_nickname_prereq_trigger
# has_strong_nickname_prereq_trigger
# has_fair_nickname_prereq_trigger
# has_ugly_nickname_prereq_trigger
# has_little_nickname_prereq_trigger
# has_genius_nickname_prereq_trigger
# has_dumb_nickname_prereq_trigger
# has_dark_nickname_prereq_trigger
# has_weak_nickname_prereq_trigger
# has_silver_nickname_prereq_trigger
# has_old_nickname_prereq_trigger
# has_warrior_nickname_prereq_trigger
# has_laughing_nickname_prereq_trigger

# is_feudal_monarch_trigger
# is_military_command_trigger

# can_use_book_trigger

NOT_mythical_creature_trigger = {
	NOR = {
		trait = dragon
		trait = cotf
		trait = giant
		trait = horse
		culture_group = winter_group
		culture_group = unoccupied_group
	}
}

##AGREEABLE###

has_benevolent_trait_trigger = {
	OR = {
		trait = just
		trait = kind
		trait = charitable
		trait = patient
		trait = honorable
		trait = affectionate
	}
}

is_benevolent_trigger = {
	has_benevolent_trait_trigger = yes
	has_evil_trait_trigger = no
}

has_pleasant_trait_trigger = {
	OR = {
		trait = honest
		trait = gregarious
		trait = trusting
		trait = affectionate
		trait = playful
		trait = socializer
		trait = charitable
		trait = patient
		trait = kind
		trait = honorable
	}
}

has_pleasant_personality_trigger = {
	has_pleasant_trait_trigger = yes
	has_unpleasant_trait_trigger = no
}

has_pious_trait_trigger = {
	OR = {
		trait = theologian
		trait = celibate
		trait = chaste
		trait = humble
		trait = content
		trait = on_pilgrimage
		#trait = pilgrim
		#trait = monk
		#trait = nun
		#trait = hajjaj
		#trait = on_hajj
		#trait = ashari
		#trait = shieldmaiden
		trait = zealous
		
		has_priest_trait_trigger = yes
	}
}

is_pious_trigger = {
	has_pious_trait_trigger = yes
	has_impious_trait_trigger = no
}

has_virtue_trigger = {
	OR = {
		trait = chaste
		trait = temperate
		trait = charitable
		trait = diligent
		trait = patient
		trait = kind
		trait = humble
		trait = honorable
	}
}


##DISAGREEABLE##

has_evil_trait_trigger = {
	OR = {
		trait = arbitrary
		trait = cruel
		trait = impaler
	}
}

is_evil_trigger = {
	has_evil_trait_trigger = yes
	has_benevolent_trait_trigger = no
}

has_unpleasant_trait_trigger = {
	OR = {
		trait = deceitful
		trait = shy
		trait = paranoid
		trait = cruel
		trait = stubborn
		trait = haughty
		trait = brooding
		trait = impaler
		trait = greedy
		trait = wroth
		trait = envious
		trait = ruthless
	}
}

has_unpleasant_personality_trigger = {
	has_unpleasant_trait_trigger = yes
	has_pleasant_trait_trigger = no
}

has_impious_trait_trigger = {
	OR = {
		trait = cynical
		trait = bad_priest_christian
		trait = bad_priest_muslim
		trait = bad_priest_norse
		trait = bad_priest_tengri
		trait = bad_priest_zoroastrian
		trait = bad_priest_aztec
		trait = hedonist
		trait = lustful
		trait = cannibal_trait
		trait = impaler
	}
}

is_impious_trigger = {
	has_impious_trait_trigger = yes
	has_pious_trait_trigger = no
}

has_vice_trigger = {
	OR = {
		trait = lustful
		trait = gluttonous
		trait = greedy
		trait = slothful
		trait = wroth
		trait = envious
		trait = proud
	}
}


##ATTRACTIVENESS##

has_attractive_trait_trigger = {
	OR = {
		trait = fair
		trait = just
		trait = brave
		trait = gregarious
		trait = seducer
		trait = seductress
		trait = robust
		trait = strong
		trait = socializer
		trait = fashionable
	}
}

is_attractive_trigger = {
	has_attractive_trait_trigger = yes
	has_unattractive_trait_trigger = no
}

has_unattractive_trait_trigger = {
	OR = {
		trait = ugly
		trait = feeble
		trait = dwarf
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = lisp
		trait = weak
		trait = lunatic
		trait = possessed
		trait = has_aztec_disease
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = drunkard
		trait = gluttonous
		trait = craven
		trait = arbitrary
		trait = cruel
		trait = stubborn
		trait = blinded
		trait = horse
		trait = one_eyed
		trait = one_handed
		trait = one_legged
		trait = disfigured_AGOT
		trait = disfigured
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = food_poisoning
		trait = rabies
		trait = infection
		trait = rash
		trait = vomiting
		trait = diarrhea
		trait = cough
		trait = greyscale_scarred
		trait = has_greyscale
	}
}

is_unattractive_trigger = {
	has_unattractive_trait_trigger = yes
	has_attractive_trait_trigger = no
}


##HEALTH/CONGENTIAL##

is_smart_trigger = {
	OR = {
		#trait = genius
		trait = quick
		trait = shrewd
	}
}

is_dumb_trigger = {
	OR = {
		trait = dull
		trait = slow
		#trait = imbecile 
	}
}

is_strong_trigger = {
	OR = {
		trait = strong
		trait = robust
	}
}

is_weak_trigger = {
	OR = {
		trait = weak
		trait = feeble
	}
}

character_disease_trigger = {
	OR = {
		trait = has_bloody_flux
		trait = has_typhoid_fever
		trait = has_grey_plague
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
		trait = old_ones_scourge
		trait = has_red_death
		trait = has_butterfly_fever
	}
}

has_disease_trigger = {
	OR = {
		trait = has_bloody_flux
		trait = has_typhoid_fever
		trait = has_grey_plague
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
		trait = dancing_plague
		trait = scurvy
		trait = ill
		trait = leper
		trait = lovers_pox
		trait = has_greyscale
		trait = old_ones_scourge
		trait = has_red_death
		trait = has_butterfly_fever
	}
}


has_symptom_trigger = {
	OR = {
		trait = infection
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
	}
}

has_injury_trigger = {
	OR = {
		trait = wounded
		trait = severely_injured
	}
}

is_maimed_trigger = {
	OR = {
		trait = maimed
		trait = one_eyed
		trait = one_handed 
		trait = one_legged 
		trait = disfigured
		trait = mangled
	}
}
is_crippled_trigger = {
	OR = {
		trait = crippled
		trait = mangled
	}
}
has_severe_disability_trigger = {
	OR = {
		trait = infirm
		trait = mangled
		trait = inbred
		trait = blinded
		trait = blinded_age
		trait = incapable
		trait = maimed
		trait = crippled
	}
}

has_medium_disability_trigger = {
	OR = {
		trait = one_legged
		trait = one_handed
		trait = one_eyed
		trait = clubfooted
		trait = hunchback
		trait = dwarf
	}
}

has_minor_disability_trigger = {
	OR = {
		trait = disfigured_AGOT
		trait = disfigured
		trait = eunuch
		trait = harelip
		trait = stutter
		trait = lisp
	}
}

has_disability_trigger = {
	OR = {
		has_severe_disability_trigger = yes
		has_medium_disability_trigger = yes
		has_minor_disability_trigger = yes
	}
}

has_mental_disorder_trigger = {
	OR = {
		trait = stressed
		trait = depressed
		trait = lunatic
		trait = possessed
		trait = drunkard
	}
}

has_fertile_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
		trait = strong
		trait = hedonist
		trait = lustful
		trait = dancing_plague
	}
}

is_fertile_trigger = {
	fertility = 0.05
	has_fertile_trait_trigger = yes
	has_infertile_trait_trigger = no
}

has_infertile_trait_trigger = {
	OR = {
		trait = homosexual
		trait = eunuch
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = stressed
		trait = depressed
		trait = ill
		trait = pneumonic
		trait = leper
		trait = syphilitic
		trait = has_aztec_disease
		trait = infirm
		trait = incapable
		trait = inbred
		trait = weak
		trait = celibate
		trait = chaste
		trait = mangled
		trait = severely_injured
		trait = dysentery
		trait = food_poisoning
		trait = cancer
	}
}

is_infertile_trigger = {
	OR = {
		AND = {
			has_infertile_trait_trigger = yes
			has_fertile_trait_trigger = no
		}
		trait = eunuch
		trait = celibate
		NOT = { fertility = 0.05 }
	}
}


##DIPLOMACY##

has_education_diplomacy_trigger = {
	OR = {
		trait = naive_appeaser
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
	}
}

has_lifestyle_diplomacy_trigger = {
	OR = {
		trait = socializer
		trait = gamer
		trait = hedonist
	}
}

child_personality_diplomacy_trigger = {
	OR = {
		trait = affectionate
		trait = playful
	}
}


##MARTIAL##

has_education_martial_trigger = {
	OR = {
		trait = misguided_warrior
		trait = tough_soldier
		trait = skilled_tactician
		trait = brilliant_strategist
	}
}

has_lifestyle_martial_trigger = {
	OR = {
		trait = duelist
		trait = hunter
		trait = strategist
	}
}

child_personality_martial_trigger = {
	OR = {
		trait = haughty
		trait = rowdy
	}
}


##STEWARDSHIP##

has_education_stewardship_trigger = {
	OR = {
		trait = indulgent_wastrel
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
	}
}

has_lifestyle_stewardship_trigger = {
	OR = {
		trait = administrator
		trait = architect
		trait = gardener
	}
}

child_personality_stewardship_trigger = {
	OR = {
		trait = conscientious
		trait = fussy
		trait = curious
	}
}


##INTRIGUE##

has_education_intrigue_trigger = {
	OR = {
		trait = amateurish_plotter
		trait = flamboyant_schemer
		trait = intricate_webweaver
		trait = elusive_shadow
	}
}

has_lifestyle_intrigue_trigger = {
	OR = {
		trait = schemer
		trait = impaler
		trait = seducer
		trait = seductress
	}
}

child_personality_intrigue_trigger = {
	OR = {
		trait = willful
		trait = brooding
		trait = indolent
	}
}


##LEARNING##

has_education_learning_trigger = {
	OR = {
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
	}
}

has_lifestyle_learning_trigger = {
	OR = {
		trait = scholar
		trait = theologian
		trait = mystic
	}
}

child_personality_learning_trigger = {
	OR = {
		trait = timid
		trait = idolizer
	}
}

is_learned_trigger = {
	OR = {
		trait = erudite
		trait = scholar
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = physician
		trait = maester
		trait = archmaester
	}
}

##RELIGION##

#has_crusade_trait_trigger = {
#}

has_secret_religion_trait_trigger = {
	custom_tooltip = {
		text = no_secret_religion
		has_secret_religion = yes
	}
}

####MERC LEADER/COUNCIL JOB####
maester_culture_trigger = { #these cultures use maesters NOTE: localisation for job_physician needs to be updated for any changes
	OR = {
		AND = {
			culture_group = andal
			NOT = { culture = old_andal }
		}	
		culture = ironborn
		AND = {
			culture_group = dornish
			NOT = { culture = rhoynar }
		}		
		AND = {
			culture_group = first_men
			NOT = { culture = moon_clansman }
		}
		AND = {
			capital_scope = { region = world_westeros }
			has_global_flag = e_iron_throne_created
			OR = {
				culture = high_valyrian
				culture = western_valyrian
			}
		}
	}
	OR = {
		NOR = {
			religion = pirate
			religion = corsair
		}
		capital_scope = { region = world_westeros }		
	}
}
can_be_castellan_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	OR = {
		is_female = no
		liege = { 
			OR = {
				culture_group = hyrkoon_group
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
					}
				}
			}
		}	
		has_character_flag = special_chancellor			
	}	
	is_adult = yes
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = wikid }
	NOT = { trait = salt_wife }
	NOT = { trait = on_reaving }
	NOT = { trait = slave }
	NOT = { trait = dragon }
	NOT = { has_landed_title = d_nightswatch }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_steward
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}
can_be_chancellor_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	is_adult = yes
	prisoner = no
	OR = {
		is_female = no
		liege = { 
			OR = {
				is_close_relative = PREV
				culture_group = hyrkoon_group
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
					}
				}
			}
		}	
		has_character_flag = special_chancellor			
	}
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = wikid }
	NOT = { trait = salt_wife }
	NOT = { trait = on_reaving }
	NOT = { trait = dragon }
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_landed_title = d_kingsguard }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			trait = nightswatch
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}
can_be_commander_trigger = {
	OR = {
		AND = {
			is_female = no
			NOT = {
				liege = { 
					culture_group = hyrkoon_group
				}
			}	
		}
		AND = {	
			is_female = yes
			liege = { 
				OR = {
					culture_group = hyrkoon_group
					culture = sarnorian				
				}
			}
		}
		AND = {
			is_female = no
			liege = { culture_group = hyrkoon_group }
			martial = 10
			NOT = { trait = eunuch }
		}
		AND = {
			OR = {
				trait = wildling
				culture = moon_clansman				
			}
			liege = { culture = ROOT }
		}
		martial = 20
		AND = {
			martial = 15
			OR = {
				liege = { is_close_relative = ROOT }
				is_ruler = yes
			}				
		}
		AND = {
			martial = 12
			OR = {
				AND = {
					culture_group = dornish
					liege = { culture = ROOT }
				}				
				AND = {
					trait = proud
					is_ruler = yes
				}	
			}				
		}
		trait = dragon_rider
		trait = horse
		has_character_flag = special_marshal	
	}
	OR = {
		is_adult = yes
		AND = {
			age = 13	
			OR = {
				trait = dragon_rider
				AND = {
					martial = 15
					is_ruler = yes
				}	
			}
		}
	}
	prisoner = no
	NOT = { is_incapable = yes }
	NOT = { trait = in_hiding }
	NOT = { trait = wikid }
	NOT = { trait = salt_wife }
	NAND = {
		is_consort = yes
		consort = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_consort } } 
	}
	NOT = { trait = on_reaving }
	NOT = { trait = slave }
	NOT = { trait = dragon }
	NOT = { trait = maester }
	NOT = { trait = archmaester }
	NOT = { has_character_flag = mega_war_remove_leader } #temp flag to remove leaders upon mega war start	
	NOT = { has_character_flag = guru }
	OR = { #NW commander must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = yes
			is_feudal = yes
		}	
		has_character_modifier = nw_ranger
	}
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}

can_be_marshal_trigger = {
	can_be_commander_trigger = yes

	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_ranger
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
}

can_be_treasurer_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	is_adult = yes
	prisoner = no
	OR = {
		is_female = no
		liege = { 
			OR = {
				is_close_relative = PREV
				culture_group = hyrkoon_group
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
					}
				}
			}
		}	
		has_character_flag = special_chancellor			
	}
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = wikid }
	NOT = { trait = salt_wife }
	NOT = { trait = on_reaving }
	NOT = { trait = dragon }
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_landed_title = d_kingsguard }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_builder
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}

can_be_spymaster_trigger = {
	NOR = {
		trait = maester
		trait = archmaester
	}
	is_adult = yes
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = wikid }
	NOT = { trait = salt_wife }
	NOT = { trait = on_reaving }
	NOT = { trait = dragon }
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_landed_title = d_kingsguard }
	liege = { NOT = { culture_group = unoccupied_group } }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			trait = nightswatch
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}

can_be_physician_trigger = {
	#liege = { NOT = { religion = jogos_pagan } } #combined with moonsinger
		
	OR = {
		AND = {
			is_adult = yes
			is_ruler = no
		}
		liege = { trait = wildling }
		has_character_flag = special_chancellor	
	}
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = wikid }
	NOT = { trait = salt_wife }
	NOT = { trait = on_reaving }
	NOT = { trait = dragon }
	NOT = { has_landed_title = c_the_citadel }
	NOT = { has_landed_title = d_nightswatch }
	OR = {		
		AND = { #Maesters can always be physician
			trait = maester
			liege = {
				NAND = {
					has_landed_title = e_iron_throne 
					NOT = { has_global_flag = aegons_conquest }
				}	
			}					
		}
		AND = { #Iron Throne employs Grand Maester
			trait = archmaester
			has_character_flag = grandmaester
			liege = {
				has_landed_title = e_iron_throne 
				NOT = { has_global_flag = aegons_conquest }
			}					
		}
		# AND = { #Wildlings employ Greenseers
			# trait = greensight
			# liege = { trait = wildling }
		# }
		AND = {
			liege = { #Generic court physicians
				NOT = { 
					maester_culture_trigger = yes #westerosi can only have maesters
					#trait = wildling	
				}					
			}
			OR = {
				learning = 15
				AND = {
					learning = 10
					OR = {
						trait = physician
						trait = scholar
						trait = mystic
						NOT = { has_dlc = "Reapers" }
					}
				}
				custom_tooltip = { 
					text = educated_court_physician
					hidden_tooltip = {
						has_character_flag = is_court_physician
					}
				}
			}		
		}	
	}
	liege = { NOT = { culture_group = unoccupied_group } }
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}
can_be_spiritual_trigger = {
	is_adult = yes
	prisoner = no
	liege = {
		religion = ROOT
	}
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = wikid }
	NOT = { trait = salt_wife }
	NOT = { trait = on_reaving }
	NOT = { trait = dragon }
	NOT = {
		OR = {
			trait = maester
			trait = archmaester
		}
	}
	OR = {
		AND = {
			is_theocracy = yes
			is_ruler = yes
		}	
		OR = {
			has_priest_trait_trigger = yes
			AND = {
				NOT = {
					OR = {
						religion = drowned_god
						religion = the_seven
						religion = rhllor
						religion = qarth_warlocks
						religion = harpy
						religion = bearded_priests
						religion = summer_rel
					}
				}
				NOT = { demesne_size = 1 }
				is_ruler = no
				OR = {
					trait = zealous
					piety = 100
				}	
			}
		}	
	}
	NOT = { has_landed_title = k_the_most_devout }
	liege = { NOT = { culture_group = unoccupied_group } }
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}
can_be_advisor_trigger = {
	is_adult = yes
	OR = {
		is_female = no
		liege = { 
			OR = {
				is_close_relative = PREV
				culture_group = hyrkoon_group
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
					}
				}
			}
		}		
	}
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }	
	NOT = { trait = slave }
	NOT = { trait = wikid }	
	NOT = { trait = on_reaving }	
	NOT = { trait = dragon }	
	NOR = {
		trait = maester
		trait = archmaester
	}
	NOT = { has_landed_title = d_nightswatch }
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}
can_be_admiral_trigger = { #and master of ships
	is_adult = yes
	martial = 8
	OR = {
		is_female = no
		liege = { 
			OR = {
				culture_group = hyrkoon_group
				primary_title = {
					OR = {
						has_law = enatic_succession
						has_law = enatic_cognatic_succession
					}
				}
			}
		}		
	}
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }	
	NOT = { trait = slave }
	NOT = { trait = wikid }	
	NOT = { trait = on_reaving }	
	NOT = { trait = dragon }	
	NOR = {
		trait = maester
		trait = archmaester
	}
	NOT = { has_landed_title = d_nightswatch }
	OR = { #NW councillor must be black brother
		liege = { NOT = { trait = nightswatch } }
		AND = {
			is_ruler = no
			has_character_modifier = nw_builder
		}	
	}
	NOT = { has_character_modifier = fired_from_council_by_regent }
	NOT = { # Not yet had event to reappoint councillors
		liege = { 
			tier = EMPEROR
			has_character_flag = mega_war_reappointing_council
		}
	}
}
###REAPER'S DUE####

can_be_maimed_trigger = {
	OR = {
		AND = {
			NOT = { has_dlc = "Reapers" }
			NOT = { trait = maimed }
		}
		AND = {
			has_dlc = "Reapers"
			NOR = {
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured
				trait = mangled
			}
		}
	}
}

physician_bad_trigger = { #todo mental, blinded
	OR = {
		has_severe_disability_trigger = yes
		has_mental_disorder_trigger = yes
	}
}

physician_good_trigger = { #todo is learned
	is_learned_trigger = yes 
}

is_inaccessible_trigger = {
	custom_tooltip = {
		text = is_inaccessible_tooltip
		hidden_tooltip = {
			OR = {
				trait = in_hiding
				trait = wikid
				trait = on_reaving
				has_character_modifier = in_seclusion
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
			}
		}
	}
}

prefers_men_trigger = {
	OR = {
		AND = {
			is_female = yes
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = no
			trait = homosexual
		}
	}
}

root_attraction_trigger = {
	#Returns yes when root is attracted the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			ROOT = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			ROOT = { prefers_men_trigger = yes }
		}
		ROOT = { #Dornish need not be homosexual if lustful
			culture_group = dornish
			trait = lustful	
		}
	}
}
attacted_to_root_trigger = {
	#Returns yes when scoped character is attracted to ROOT, based on sex
	OR = {
		AND = {
			ROOT = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			ROOT = { is_female = no }
			prefers_men_trigger = yes
		}	
		AND = { #Dornish need not be homosexual if lustful
			culture_group = dornish
			trait = lustful	
		}
	}
}

attacted_to_prev_trigger = {
	OR = {
		AND = {
			PREV = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			PREV = { is_female = no }
			prefers_men_trigger = yes
		}
		AND = { #Dornish need not be homosexual if lustful
			culture_group = dornish
			trait = lustful	
		}
	}
}

is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes
		is_voter = yes
		AND = {
			NOT = { dynasty = none }
			num_of_dynasty_members = 2
		}
		real_father_even_if_dead = { always = yes }
		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }
		num_of_claims = 1
		has_character_flag = eternal_life_mystic
		trait = horse
		has_character_modifier = in_seclusion
		immortal = yes
		trait = dragon
		trait = white_walker
		trait = kingsguard
		trait = dragon_rider
		trait = archmaester
		trait = favored_by_rhllor
		trait = chosen_by_rhllor
		trait = resurrected_by_rhllor
		trait = slave
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

has_epidemic_disease_trigger = {
	OR = {
		trait = has_bloody_flux
		trait = has_typhoid_fever
		trait = has_grey_plague
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = old_ones_scourge
		trait = has_red_death
	}
}

developing_epidemic_disease_trigger = {
	OR = {
		has_character_flag = got_tuberculosis
		has_character_flag = got_typhoid_fever
		has_character_flag = got_typhus
		has_character_flag = got_bubonic_plague
		has_character_flag = got_measles
		has_character_flag = got_small_pox
		has_character_flag = got_aztec_disease
		has_character_flag = got_red_death
	}
}

can_be_prophet_of_doom_trigger = {
	is_adult = yes
	is_married = no
	trait = zealous
	is_landed = no
	
	OR = {
		trait = ambitious
		trait = misguided_warrior
		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}
	NOR = {
		trait = content
		trait = cynical
		trait = temperate
		is_main_spouse = yes
		is_landed = yes
		is_close_relative = ROOT
		trait = dragon
	}
	ai = yes
}

death_murder_trigger = {
	OR = {
		death_murder_unknown_trigger = yes
		death_murder_known_trigger = yes
	}
	
}

death_murder_unknown_trigger = {
	OR = {
		death_reason = death_murder_unknown
		death_reason = death_murder_unknown_poison
		death_reason = death_murder_unknown_fall
		death_reason = death_murder_unknown_arrow
		death_reason = death_murder_unknown_beheading
		death_reason = death_murder_unknown_snakes
		death_reason = death_murder_unknown_strangle
		death_reason = death_murder_unknown_slayed
		death_reason = death_murder_unknown_shadow
		death_reason = death_murder_unknown_hashashin
		death_reason = death_murder_unknown_fear
		death_reason = death_murder_unknown_lightning
		death_reason = death_murder_unknown_combustion
		death_reason = death_murder_unknown_crows
		death_reason = death_murder_unknown_possessed_fall
	}
}

death_murder_known_trigger = {
	OR = {
		death_reason = death_murder
		death_reason = death_murder_poison
		death_reason = death_murder_fall
		death_reason = death_murder_drowning
		death_reason = death_murder_butchered
		death_reason = death_murder_arrow
		death_reason = death_murder_beheading
		death_reason = death_murder_snakes
		death_reason = death_murder_strangle
		death_reason = death_murder_slayed
		death_reason = death_murder_shadow
		death_reason = death_murder_hashashin
	}	
}

death_execution_trigger = {
	OR = {
		death_reason = death_execution
		death_reason = death_execution_crushing
		death_reason = death_execution_ash
		death_reason = death_execution_burning
		death_reason = death_execution_hdq
		death_reason = death_execution_bear
		death_reason = death_execution_lion
		death_reason = death_execution_snake_pit
		death_reason = death_execution_disembowelment
		death_reason = death_execution_boiling
		death_reason = death_execution_sawing
		death_reason = death_execution_hunt
		death_reason = death_execution_live_burial
		death_reason = death_execution_hanging
		death_reason = death_execution_immurement
		death_reason = death_execution_beheading
		death_reason = death_execution_wine
		death_reason = death_execution_poison
		death_reason = death_execution_flaying
		death_reason = death_execution_impaling
		death_reason = death_execution_tiger
		death_reason = death_execution_elephants
		death_reason = death_execution_bamboo
		death_reason = death_execution_stoning
		death_reason = death_execution_crucifixion
		death_reason = death_execution_blood_eagle
		death_reason = death_execution_scaphism
		death_reason = death_execution_drowning_pit
		death_reason = death_execution_garrotting
		death_reason = death_execution_horses
		death_reason = death_execution_back_breaking
		death_reason = death_execution_wheel
		death_reason = death_execution_boar
		death_reason = death_execution_eaten
		death_reason = death_execution_aztec_sacrifice
		death_reason = death_execution_dothraki_mutilation
		death_reason = death_execution_dragon
		death_reason = death_execution_torture
		death_reason = death_execution_moon_door
		death_reason = death_execution_snu_snu
		death_reason = death_execution_strangle
		death_reason = death_execution_wolf
		death_reason = death_execution_shadowcat
		death_reason = death_execution_snowbear
		death_reason = death_execution_direwolf
		death_reason = death_execution_brownbear
		death_reason = death_execution_boar_trait
		death_reason = death_execution_dog
	}	
}

death_sacrificed_trigger = {
	OR = {
		death_reason = death_sacrificed
		death_reason = death_sacrificed_norse
		death_reason = death_sacrificed_ancestors
		death_reason = death_sacrificed_abandoned
		death_reason = death_sacrificed_rhllor
		death_reason = death_sacrificed_drowned
	}	
}

death_accident_trigger = {
	OR = {
		death_reason = death_accident
		death_reason = death_accident_bear
		death_reason = death_accident_boar
		death_reason = death_accident_drowning
		death_reason = death_accident_arrow
		death_reason = death_accident_tiger
		death_reason = death_accident_snakes
		death_reason = death_accident_fall
		death_reason = death_accident_faceless
		death_reason = death_accident_horse
		death_reason = death_accident_dragon_hatching
		death_reason = death_accident_hunting
		death_reason = death_accident_wildfire
		death_reason = death_accident_iron_throne
		death_reason = death_accident_wyvern
	}
}

death_suicide_trigger = {
	OR = {
		death_reason = death_suicide
		death_reason = death_suicide_fall
		death_reason = death_suicide_hanging
		death_reason = death_suicide_poison
		death_reason = death_suicide_drank_wildfire
		death_reason = death_suicide_possessed_fall
	}
}

block_general_event_trigger = {
	OR = {	
		trait = incapable
		is_adult = no
		prisoner = yes
		is_inaccessible_trigger = yes
		is_alive = no
		hidden_trigger = {
			NOT = { always = yes }
		}
		NOT = { NOT_mythical_creature_trigger = yes }
	}
}
gender_equality_trigger = {
	OR = {
		culture_group = hyrkoon_group
		AND = {
			is_landed = yes
			primary_title = { 
				OR = {
					has_law = enatic_cognatic_succession
					has_law = enatic_succession
				}	
			}
		}
		AND = {
			is_landed = no
			liege = {
				primary_title = {
					OR = {
						has_law = enatic_cognatic_succession
						has_law = enatic_succession
					}
				} 
			}
		}
		# has_game_rule = {
			# name = gender
			# value = all
		# }
	}
}

#Has same education as prev?
has_prev_education_trigger = {
	OR = {
		AND = {
			has_education_martial_trigger = yes
			PREV = { has_education_martial_trigger = yes }
		}
		AND = {
			has_education_diplomacy_trigger = yes
			PREV = { has_education_diplomacy_trigger = yes }
		}
		AND = {
			has_education_stewardship_trigger = yes
			PREV = { has_education_stewardship_trigger = yes }
		}
		AND = {
			has_education_intrigue_trigger = yes
			PREV = { has_education_intrigue_trigger = yes }
		}
		AND = {
			has_education_learning_trigger = yes
			PREV = { has_education_learning_trigger = yes }
		}
	}
}

useless_character_trigger = {
	OR = {
		NOT = { health = 2.5 }
		trait = lunatic
		trait = maimed
		trait = infirm
		trait = incapable
		trait = mangled
		trait = severely_injured
		trait = imbecile
		trait = inbred
		trait = crippled
	}
}

relationship_with_root_trigger = {
	OR = {
		is_lover = ROOT
		is_friend = ROOT
		is_rival = ROOT
	}
}

family_of_root_trigger = {
	OR = {
		is_close_relative = ROOT #spouse, parents, children, siblings, grandparents, grandchildren
		cousin_of_root_trigger = yes #cousins
		sibling_child_of_root_trigger = yes #nephews, nieces
		parent_sibling_of_root_trigger = yes #aunts, uncles
		sibling_in_law_of_root_trigger = yes #brothers and sisters in law
	}
}

cousin_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_sibling_even_if_dead = { any_child = { character = ROOT } } }
		father_even_if_dead = { any_sibling_even_if_dead = { any_child = { character = ROOT } } }
	}
}

sibling_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_child = { character = ROOT } }
		father_even_if_dead = { any_child = { character = ROOT } }
	}
}
full_sibling_of_root_trigger = {
	mother_even_if_dead = { any_child = { character = ROOT } }
	father_even_if_dead = { any_child = { character = ROOT } }
}

sibling_child_of_root_trigger = {
	OR = {
		mother_even_if_dead = { sibling = ROOT }
		father_even_if_dead = { sibling = ROOT }
	}
}

parent_sibling_of_root_trigger = {
	any_sibling_even_if_dead = { any_child = { character = ROOT } }
}

grandchild_of_root_trigger = {
	OR = {
		mother_even_if_dead = { mother_even_if_dead = { character = ROOT } }
		mother_even_if_dead = { father_even_if_dead = { character = ROOT } }
		father_even_if_dead = { mother_even_if_dead = { character = ROOT } }
		father_even_if_dead = { father_even_if_dead = { character = ROOT } }
	}
}

sibling_in_law_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_child_even_if_dead = { is_married = ROOT } }
		father_even_if_dead = { any_child_even_if_dead = { is_married = ROOT } }
		any_spouse = { mother_even_if_dead = { any_child = { character = ROOT } } }
		any_spouse = { father_even_if_dead = { any_child = { character = ROOT } } }
	}
}

is_murder_quest_target_of_prev_trigger = { #if readded to mod, this condition is added to all ordinary murder plot events
	PREVPREV = {
		has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

# assassins_appropriate_target_trigger = {
	# is_within_diplo_range = ROOT
	# is_adult = yes
	# is_quest_target = no

	# OR = {
		# is_ruler = no
		# AND = {
			# ROOT = {
				# society_rank = {
					# rank == 3
					# society = the_assassins
				# }
			# }
			# primary_title = { higher_real_tier_than = COUNT }
		# }
		# AND = {
			# ROOT = {
				# society_rank = {
					# rank == 2
					# society = the_assassins
				# }
			# }
			# primary_title = { lower_real_tier_than = EMPEROR }
		# }
		# AND = {
			# ROOT = {
				# society_rank = {
					# rank == 1
					# society = the_assassins
				# }
			# }
			# primary_title = { lower_real_tier_than = DUKE }
		# }
	# }
# }

interesting_face_trigger = {
	OR = {
		trait = fair
		trait = ugly
		trait = scarred
		is_ill = yes
		trait = disfigured
		trait = blinded
		trait = one_eyed
		trait = leper
		trait = harelip
		is_strong_trigger = yes
		is_weak_trigger = yes
		trait = lunatic
		trait = possessed
		trait = rabies
		trait = horse
		trait = greyscale_scarred
		trait = disfigured_AGOT
		trait = has_greyscale
		trait = fashionable
	}
}

# can_pay_assassins_debt = {
	# OR = {
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 50 }
			# wealth = 50
		# }
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 250 }
			# wealth = 250
		# }
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 300 }
			# wealth = 300
		# }
		# AND = {
			# is_variable_equal = { which = assassins_debt value = 500 }
			# wealth = 500
		# }
	# }
# }

is_rich_holding = {
	OR = {
		yearly_income = 20
		base_value_4_trigger = yes
	}
}
is_richer_holding = {
	OR = {
		yearly_income = 24
		base_value_5_trigger = yes
	}
}

has_society_currency_trivial_trigger = {
	society_currency >= 15
}

has_society_currency_tiny_trigger = {
	society_currency >= 50
}

has_society_currency_minor_trigger = {
	society_currency >= 150
}

has_society_currency_medium_trigger = {
	society_currency >= 300
}

has_society_currency_major_trigger = {
	society_currency >= 500
}

is_ill_trigger = {
	OR = {
		has_disease_trigger = yes
	}
}

is_devil_worshiper_trigger = {
	custom_tooltip = {
		text = IS_DEVIL_WORSHIPPER_TRIGGER
		OR = {
			society_member_of = the_satanists #The Great Other
			society_member_of = the_cold_ones #The Others
			society_member_of = the_plaguebringers #The Stranger
			society_member_of = the_cult_of_kali #The Storm God
			society_member_of = the_trollcrafters #Cult of the Starry Wisdom
		}
	}
}

has_negative_congenital_trigger = {
	OR = {
		trait = ugly
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = harelip
		trait = stutter
		trait = lisp
		trait = slow
		trait = inbred
		trait = weak
		trait = imbecile
	}
}

# is_christian_monastic_member_trigger = {
	# OR = {
		# society_member_of = monastic_order_orthodox
		# society_member_of = monastic_order_benedictine
		# society_member_of = monastic_order_dominican
		# society_member_of = monastic_order_nestorian
		# society_member_of = monastic_order_monophysite
	# }
# }

is_monastic_member_trigger = {
	# OR = {
		# is_dharmic_monastic_member_trigger = yes
		# is_christian_monastic_member_trigger = yes
	# }
}

is_ascetic_trigger = { #vow of celibacy
	OR = {
		trait = kingsguard
		trait = nightswatch
		trait = maester
		trait = archmaester
		trait = silent_sister
		trait = drowned
		trait = grace
		trait = bearded_priest
		trait = septa
		trait = septon
	}
}

is_virgin_trigger = {
	NOR = {
		any_lover = { always = yes }
		any_child_even_if_dead = { always = yes }
		any_spouse_even_if_dead = { always = yes }
		has_focus = focus_seduction
		is_pregnant = yes
		trait = pregnant
		trait = lustful
		trait = hedonist
		trait = seducer
		trait = seductress
		trait = lovers_pox
		trait = has_aztec_disease
		trait = syphilitic
	}
	OR = {
		NOT = { age = 25 }
		trait = celibate
		trait = chaste
		trait = shy
		is_ascetic_trigger = yes
	}
}
print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

is_secret_religious_society_member_trigger = {
	#society_member_of = secret_religious_cult
}

is_christian_secret_religious_society_member_trigger = {
	# society_member_of = secret_religious_cult
	# secret_religion_group = christian
}

is_openly_of_prevs_secret_religion_trigger = {
	religion = { target = PREV target_type = secret }
}	

is_openly_of_roots_secret_religion_trigger = {
	religion = { target = ROOT target_type = secret }
}

has_sympathy_for_true_religion_of_prev_trigger = { 
	# OR = {
		# AND = {
			# trait = sympathy_christendom
			# PREV = { true_religion_group_christian_trigger = yes }
		# }
		
	# }	
}

has_sympathy_for_true_religion_of_root_trigger = { 
	# OR = {
		# AND = {
			# trait = sympathy_christendom
			# ROOT = { true_religion_group_christian_trigger = yes }
		# }
		
	# }
}	

ok_sr_induction_mission_target_trigger = {
	is_adult = yes
	NOT = { secret_religion = ROOT }
	NOT = { religion = { target_type = secret target = ROOT } }
	prisoner = no
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
	OR = {
		religion_group = { target_type = secret target = ROOT }
		has_sympathy_for_true_religion_of_root_trigger = yes
	}
}

ok_sr_sympathy_mission_target_trigger = {
	has_secret_religion_trait_trigger = no
	ROOT = {
		NOT = { secret_religion = { target_type = public target = PREV } }
		# NOR = {
			# AND = {
				# true_religion_group = christian
				# PREV = { trait = sympathy_christendom }
			# }

		# }
	}
	ROOT = { PREV = { is_openly_of_prevs_secret_religion_trigger = no } }
	ROOT = { PREV = { has_sympathy_for_true_religion_of_prev_trigger = no } }
	prisoner = no
	is_adult = yes
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
}

has_prevs_secret_religion_truly_trigger = {
	secret_religion = { target = PREV target_type = true }
}

has_roots_secret_religion_truly_trigger = {
	secret_religion = { target = ROOT target_type = true }
}

has_my_liege_secret_religion_truly_trigger = {
	secret_religion = { target = event_target:my_liege target_type = true }
}


is_in_prevs_interesting_society_trigger = {
	# OR = {
		# AND = {
			# society_member_of = secret_religious_society_catholic
			# PREV = { interested_in_society = secret_religious_society_catholic }
		# }
		
	# }
}

shares_prevs_secret_religion_trigger = {
	secret_religion = PREV
}

character_knows_prev_trigger = {
	OR = {
		is_close_relative = PREV
		is_lover = PREV
		is_friend = PREV
		is_rival = PREV
		any_courtier_or_vassal = { character = PREVPREV }
		is_liege_or_above = PREV
		dynasty = PREV
		same_liege = PREV
		AND = {
			is_within_diplo_range = PREV
			PREV = { independent = yes } 
		}
	}
}

shares_true_religion_group_with_prev_trigger = {
	true_religion_group = PREV
}
is_openly_of_prevs_true_religion_group = {
	religion_group = { target = PREV target_type = true }
}
is_visible_to_self_trigger = { #For hidden modifiers
	custom_tooltip = {
		text =  is_visible_to_self_trigger_tooltip
		character = FROM
	}
}

has_any_char_old_religion = {
	# OR = {
		# AND = {
			# has_character_flag = character_was_catholic
	    	# any_character = {
	    		# religion = catholic
	    	# }
	    # }
	  
	# }
}

can_add_admin_bonus_trigger = {
	NAND = {
		has_province_modifier = harvest_festivals
		has_province_modifier = inspired_peasantry
		has_province_modifier = new_roads
	}
}

can_be_sabotaged_trigger = {
	NAND = {
		has_province_modifier = sabotaged_buildings
		has_province_modifier = sabotaged_defences
		has_province_modifier = sabotaged_unrest
	}
}

has_assassins_prerequisites = {
	# age = 16
	# true_religion_shiite_trigger = yes
	# OR = {
		# is_female = no
		# has_game_rule = {
			# name = gender
			# value = all
		# }
	# }
}
has_common_devilworship_prerequisites = {
	age = 16
	OR = {
		trait = cynical
		trait = hedonist
		trait = cannibal_trait
		trait = impaler
		trait = ruthless
		trait = cruel
		trait = possessed
		trait = lunatic
	}
	NAND = {
		piety = 0
		OR = {
			trait = kind
			trait = honorable
			trait = just
		}
	}
	# custom_tooltip = {
		# text = must_be_a_sinner_tooltip
		# hidden_tooltip = {
			
		# }
	# }
}

has_satanists_prerequisites = {
	has_common_devilworship_prerequisites = yes
	religion = rhllor
	NOT = { trait = favored_by_rhllor }
	NOT = { trait = chosen_by_rhllor }
}

has_trollcrafters_prerequisites = {
	has_common_devilworship_prerequisites = yes
	hidden_trigger = {
		NOR = {
			religion = rhllor
			religion = drowned_god
			religion = old_gods
			religion_group = wildling_religion
			religion = the_seven
		}
	}
}

has_cult_of_kali_prerequisites = {
	has_common_devilworship_prerequisites = yes
	religion = drowned_god	
}

has_cold_ones_prerequisites = {
	has_common_devilworship_prerequisites = yes
	OR = {
		religion = old_gods
		religion_group = wildling_religion	
	}
}

has_plaguebringers_prerequisites = {
	has_common_devilworship_prerequisites = yes
	religion = the_seven
}

same_society_rank_as_prev_trigger = {
	OR = {
		AND = {
			society_rank == 1
			PREV = { society_rank == 1 }
		}
		AND = {
			society_rank == 2
			PREV = { society_rank == 2 }
		}
		AND = {
			society_rank == 3
			PREV = { society_rank == 3 }
		}
		AND = {
			society_rank == 4
			PREV = { society_rank == 4 }
		}
	}
}

higher_society_rank_than_prev_trigger = {
	OR = {
		AND = {
			PREV = { society_rank == 1 }
			society_rank > 1
		}
		AND = {
			PREV = { society_rank == 2 }
			society_rank > 2
		}
		AND = {
			PREV = { society_rank == 3 }
			society_rank > 3
		}
	}
}

#returns true if scoped character already likes ROOT and could be physically attracted to them
possibly_romantically_interested_in_ROOT_trigger = {
	NOT = { is_rival = ROOT }
	attacted_to_root_trigger = yes
	OR = {
		opinion = { who = ROOT value = 45 }
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character is already liked by ROOT and ROOT could be physically attracted to them
ROOT_possibly_romantically_interested_trigger = {
	NOT = { is_rival = ROOT }
	root_attraction_trigger = yes
	OR = { 
		reverse_opinion = { who = ROOT value = 45 }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character and ROOT are somewhat likely to fancy each other
possibly_romantically_interested_in_each_other_trigger = {
	possibly_romantically_interested_in_ROOT_trigger = yes
	ROOT_possibly_romantically_interested_trigger = yes
}

looting_artifact_event_religious_artifacts_trigger = {
	FROM = {
		any_artifact = {
			has_artifact_flag = looted_artifact_tooltip_1
			has_artifact_flag = religious
		}
		# NAND = {
			# any_artifact = {
				# has_artifact_flag = looted_artifact_tooltip_1
				# has_artifact_flag = catholic
				# ROOT = { religion = catholic }
			# }
		# }
		# NAND = {
			# any_artifact = {
				# has_artifact_flag = looted_artifact_tooltip_1
				# has_artifact_flag = christian
				# ROOT = { religion_group = christian }
			# }
		# }
		
	}
}
can_be_asked_to_leave_court_trigger = {
	NOR = {
		is_ruler = yes
		is_landed = yes			
		dynasty = FROM
		is_married = FROM
		is_consort = FROM
		is_adult = no
		is_close_relative = FROM
		has_character_flag = eternal_life_mystic
		has_character_flag = immortal_rival
		trait = horse				
		trait = slave
		trait = incapable
		trait = kingsguard
		trait = nightswatch
		trait = archmaester
		has_character_modifier = in_seclusion
		has_job_title = yes
		is_voter = yes
		has_minor_title = title_regent
		has_minor_title = title_appointed_regent
		has_minor_title = title_commander
		prisoner = yes
	}
}

has_a_seer_modifier_trigger = {
	OR = {
		has_character_modifier = fulfilled_vision_great
		has_character_modifier = fulfilled_vision_ok
		has_character_modifier = fulfilled_vision_bad
		has_character_modifier = fulfilled_vision_worst
	}
}

has_an_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}
has_positive_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
	}
}

has_negative_omen_modifier_trigger = {
	OR = {
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_battle_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = bad_battle_omen
	}
}

has_relationship_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_relationship_omen
		has_character_modifier = bad_relationship_omen
	}
}

has_power_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_power_omen
		has_character_modifier = bad_power_omen
	}
}

has_top_tier_education_trait_trigger = {
	OR = {
		trait = elusive_shadow
		trait = grey_eminence
		trait = midas_touched
		trait = brilliant_strategist
		trait = mastermind_theologian
	}
}

has_childhood_horoscope_modifier_trigger = {
	OR = {
		has_character_modifier = guided_by_horoscope_diplomacy
		has_character_modifier = guided_by_horoscope_martial
		has_character_modifier = guided_by_horoscope_stewardship
		has_character_modifier = guided_by_horoscope_intrigue
		has_character_modifier = guided_by_horoscope_learning
	}
}

is_born_in_january_trigger = {
	month_of_birth = 1
	NOT = { month_of_birth = 2 }
}
is_born_in_february_trigger = {
	month_of_birth = 2
	NOT = { month_of_birth = 3 }
}
is_born_in_march_trigger = {
	month_of_birth = 3
	NOT = { month_of_birth = 4 }
}
is_born_in_april_trigger = {
	month_of_birth = 4
	NOT = { month_of_birth = 5 }
}
is_born_in_may_trigger = {
	month_of_birth = 5
	NOT = { month_of_birth = 6 }
}
is_born_in_june_trigger = {
	month_of_birth = 6
	NOT = { month_of_birth = 7 }
}
is_born_in_july_trigger = {
	month_of_birth = 7
	NOT = { month_of_birth = 8 }
}
is_born_in_august_trigger = {
	month_of_birth = 8
	NOT = { month_of_birth = 9 }	
}
is_born_in_september_trigger = {
	month_of_birth = 9
	NOT = { month_of_birth = 10 }	
}
is_born_in_october_trigger = {
	month_of_birth = 10
	NOT = { month_of_birth = 11 }	
}
is_born_in_november_trigger = {
	month_of_birth = 11
	NOT = { month_of_birth = 12 }	
}
is_born_in_december_trigger = {
	month_of_birth = 12
}

is_born_under_Aries_trigger = {
	OR = {
		AND = {
			is_born_in_march_trigger = yes
			day_of_birth = 20 #including this
		}
		AND = {
			is_born_in_april_trigger = yes
			NOT = { day_of_birth = 19 } #not 19th, so 18th at the latest
		}
	}
}
is_born_under_Taurus_trigger = {
	OR = {
		AND = {
			is_born_in_april_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_may_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Gemini_trigger = {
	OR = {
		AND = {
			is_born_in_may_trigger = yes
			day_of_birth = 20
		}
		AND = {
			is_born_in_june_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Cancer_trigger = {
	OR = {
		AND = {
			is_born_in_june_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_july_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Leo_trigger = {
	OR = {
		AND = {
			is_born_in_july_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_august_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Virgo_trigger = {
	OR = {
		AND = {
			is_born_in_august_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_september_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Libra_trigger = {
	OR = {
		AND = {
			is_born_in_september_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_october_trigger = yes
			NOT = { day_of_birth = 23 }
		}
	}
}
is_born_under_Scorpius_trigger = {
	OR = {
		AND = {
			is_born_in_october_trigger = yes
			day_of_birth = 23
		}
		AND = {
			is_born_in_november_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Sagittarius_trigger = {
	OR = {
		AND = {
			is_born_in_november_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_december_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Capricorn_trigger = {
	OR = {
		AND = {
			is_born_in_december_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_january_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Aquarius_trigger = {
	OR = {
		AND = {
			is_born_in_january_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_february_trigger = yes
			NOT = { day_of_birth = 18 }
		}
	}
}
is_born_under_Pisces_trigger = {
	OR = {
		AND = {
			is_born_in_february_trigger = yes
			day_of_birth = 18
		}
		AND = {
			is_born_in_march_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}

is_romantic_zodiac_match_with_root_trigger = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
	}
}

is_romantic_zodiac_mismatch_with_root = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
	}
}
has_unsafe_secret_religion = {
	always = no
	#NOT = { is_nomadic = yes }
}

# #to check type of ingredient... (if more are added, they need to go in here to work with the current system)
# is_ingredient_herb_trigger = {
	# OR = {
		# artifact_type = ingredient_herb1
		# artifact_type = ingredient_herb2
		# artifact_type = ingredient_herb3
		# artifact_type = ingredient_herb4
		# artifact_type = ingredient_herb5
		# artifact_type = ingredient_herb6
		# artifact_type = ingredient_herb7
		# artifact_type = ingredient_herb8
		# artifact_type = ingredient_herb9
	# }
# }

# is_ingredient_animal_part_trigger = {
	# OR = {
		# artifact_type = ingredient_animal1
		# artifact_type = ingredient_animal2
		# artifact_type = ingredient_animal3
		# artifact_type = ingredient_animal4
		# artifact_type = ingredient_animal5
		# artifact_type = ingredient_animal6
		# artifact_type = ingredient_animal7
		# artifact_type = ingredient_animal8
		# artifact_type = ingredient_animal9
	# }
# }

# is_ingredient_powder_trigger = {
	# OR = {
		# artifact_type = ingredient_metal_exotic1
		# artifact_type = ingredient_metal_exotic5
		# artifact_type = ingredient_metal_exotic6
		# artifact_type = ingredient_metal_exotic7
		# artifact_type = ingredient_metal_exotic8
		# artifact_type = ingredient_metal_exotic9
	# }
# }

# is_ingredient_liquid_trigger = {
	# OR = {
		# artifact_type = ingredient_metal_exotic2
		# artifact_type = ingredient_metal_exotic3
		# artifact_type = ingredient_metal_exotic4
	# }
# }

# #to check which ingredient TO BE selected (via scripted effects)...
# has_a_herb_ingredient_trigger = {
	# any_artifact = {
		# is_ingredient_herb_trigger = yes
	# }
# }

# has_an_animal_part_ingredient_trigger = {
	# any_artifact = {
		# is_ingredient_animal_part_trigger = yes
	# }
# }

# has_a_powder_ingredient_trigger = {
	# any_artifact = {
		# is_ingredient_powder_trigger = yes
	# }
# }

# has_a_liquid_ingredient_trigger = {
	# any_artifact = {
		# is_ingredient_liquid_trigger = yes
	# }
# }

# #to check if HAS selected (via scripted effects) an ingredient...
# has_selected_herb_ingredient_1_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_1
		# is_ingredient_herb_trigger = yes
	# }
# }

# has_selected_animal_part_ingredient_1_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_1
		# is_ingredient_animal_part_trigger = yes
	# }
# }

# has_selected_powder_ingredient_1_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_1
		# is_ingredient_powder_trigger = yes
	# }
# }

# has_selected_liquid_ingredient_1_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_1
		# is_ingredient_liquid_trigger = yes
	# }
# }

# has_selected_herb_ingredient_2_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_2
		# is_ingredient_herb_trigger = yes
	# }
# }

# has_selected_animal_part_ingredient_2_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_2
		# is_ingredient_animal_part_trigger = yes
	# }
# }

# has_selected_powder_ingredient_2_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_2
		# is_ingredient_powder_trigger = yes
	# }
# }

# has_selected_liquid_ingredient_2_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_2
		# is_ingredient_liquid_trigger = yes
	# }
# }

# has_selected_ingredient_1_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_1
	# }
# }

# has_selected_ingredient_2_trigger = {
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_2
	# }
# }

# selected_ingredient_is_sleep_inducing_trigger = {
	# any_artifact = {
		# OR = {
			# has_artifact_flag = selected_ingredient_1
			# has_artifact_flag = selected_ingredient_2
		# }
		# OR = {
			# artifact_type = ingredient_herb7
			# artifact_type = ingredient_herb3
			# artifact_type = ingredient_herb9			
		# }
	# }
# }

# selected_ingredient_is_antipyretic_trigger = {
	# any_artifact = {
		# OR = {
			# has_artifact_flag = selected_ingredient_1
			# has_artifact_flag = selected_ingredient_2
		# }
		# OR = {
			# artifact_type = ingredient_herb1
			# artifact_type = ingredient_herb2
			# artifact_type = ingredient_herb4
			# artifact_type = ingredient_herb5
			# artifact_type = ingredient_herb8
			# artifact_type = ingredient_metal_exotic6
		# }
	# }
# }

# selected_ingredient_is_perceived_healthy_trigger = {
	# any_artifact = {
		# OR = {
			# has_artifact_flag = selected_ingredient_1
			# has_artifact_flag = selected_ingredient_2
		# }
		# OR = {
			# AND = {
				# is_ingredient_herb_trigger = yes
				# NOT = { artifact_type = ingredient_herb3 } #Mandrake
			# }
			# artifact_type = ingredient_metal_exotic8 #Mercury
			# artifact_type = ingredient_metal_exotic8 #Iron
			# artifact_type = ingredient_metal_exotic6 #Gold

			# artifact_type = ingredient_animal2 #Kidney
			# artifact_type = ingredient_animal7 #Heart
			# artifact_type = ingredient_animal8 #Liver
			# artifact_type = ingredient_animal9 #Intestines
		# }
	# }
# }

# selected_ingredient_is_unhealthy_trigger = {
	# any_artifact = {
		# OR = {
			# has_artifact_flag = selected_ingredient_1
			# has_artifact_flag = selected_ingredient_2
		# }
		# OR = {
			# artifact_type = ingredient_herb3 #Mandrake
			# artifact_type = ingredient_metal_exotic8 #Mercury
			# artifact_type = ingredient_metal_exotic8 #Iron
			# is_ingredient_animal_part_trigger = yes
		# }
	# }
# }

# selected_ingredient_1_and_2_are_same = {
	# #Checks whether the ingredients selected are same type, such as two Hibiscus (if so, returns true)...
	# any_artifact = {
		# has_artifact_flag = selected_ingredient_1
		# ROOT = {
			# any_artifact = {
				# has_artifact_flag = selected_ingredient_2
				# is_artifact_same_type_as = PREVPREV
			# }
		# }
	# }
# }

# ingredient_is_sleep_inducing_trigger = {
	# OR = {
		# artifact_type = ingredient_herb7
		# artifact_type = ingredient_herb3
		# artifact_type = ingredient_herb9
	# }
# }

# ingredient_is_antipyretic_trigger = {
	# OR = {
		# artifact_type = ingredient_herb1
		# artifact_type = ingredient_herb2
		# artifact_type = ingredient_herb4
		# artifact_type = ingredient_herb5
		# artifact_type = ingredient_herb8
		# artifact_type = ingredient_metal_exotic6
	# }
# }

# ingredient_is_perceived_healthy_trigger = {
	# OR = {
		# AND = {
			# is_ingredient_herb_trigger = yes
			# NOT = { artifact_type = ingredient_herb3 } #Mandrake
		# }
		# artifact_type = ingredient_metal_exotic8 #Mercury
		# artifact_type = ingredient_metal_exotic8 #Iron
		# artifact_type = ingredient_metal_exotic6 #Gold

		# artifact_type = ingredient_animal2 #Kidney
		# artifact_type = ingredient_animal7 #Heart
		# artifact_type = ingredient_animal8 #Liver
		# artifact_type = ingredient_animal9 #Intestines
	# }
# }

# ingredient_is_unhealthy_trigger = {
	# OR = {
		# artifact_type = ingredient_herb3 #Mandrake
		# artifact_type = ingredient_metal_exotic8 #Mercury
		# artifact_type = ingredient_metal_exotic8 #Iron
		# AND = {
			# is_ingredient_animal_part_trigger = yes
			# NOR = {
				# artifact_type = ingredient_animal2 #Kidney
				# artifact_type = ingredient_animal7 #Heart
				# artifact_type = ingredient_animal8 #Liver
				# artifact_type = ingredient_animal9 #Intestines
			# }
		# }
	# }
# }

same_true_religion_as_from_trigger = {
	true_religion = FROM
}
same_true_religion_as_root_trigger = {
	true_religion = ROOT
}

religion_openly_norse_or_reformed_trigger = {
	# custom_tooltip = {
		# text = religion_openly_norse_or_reformed_tooltip
		# hidden_trigger = {
			# OR = {
				# religion = norse_pagan
				# religion = norse_pagan_reformed
			# }
		# }
	# }
}

##########
###AGOT###
##########

has_valyrian_steel_sword_trigger = {
	custom_tooltip = {
		text = has_valyrian_steel_sword_trigger
		hidden_tooltip = {
			OR = {
				trait = valyrian_steel
				trait = longclaw
				trait = longclaw_snow
				trait = blackfyre
				trait = darksister
				trait = dawn
				trait = brightroar
				trait = heartsbane
				trait = ice
				trait = nightfall
				trait = darksister
				trait = ladyforlorn
				trait = redrain
				trait = widowswail
				trait = oathkeeper
				trait = crabspincer
				trait = strangers_mercy
				trait = vigilance
				trait = orphan_maker
				trait = truth
				trait = lamentation
				trait = poison
				trait = anger
				trait = black_death
				trait = compassion
				trait = concession
				trait = del_pino
				trait = el_swordo
				trait = gold_sword
				trait = happyness
				trait = hubris
				trait = justice
				trait = kingmaker
				trait = passion
				trait = rage
				trait = sightblinder
				trait = the_monarchist
				trait = the_usurper
				trait = worldeater
				trait = worlds_envy
			}
		}	
	}	
}
##Slavery
#if these change, adjust localisation
has_slavery_religion_trigger = {
	custom_tooltip = {
		text = has_slavery_religion_trigger
		hidden_tooltip = {
			OR = {			
				religion = pirate
				religion = corsair
				religion = lady_of_the_waves				
			}
		}
	}	
}
has_slavery_culture_trigger = {
	custom_tooltip = {
		text = has_slavery_culture_trigger
		hidden_tooltip = {
			OR = {
				culture_group = ghiscari_group
				AND = {
					culture_group = valyrian
					NOT = { culture = western_valyrian }
				}	
				AND = {
					culture_group = free_cities
					NOT = { culture = braavosi }
					NOT = { culture = lorathi }
				}
				culture = dothraki
				culture_group = yi_ti_group
				culture = lengi
				culture = qartheen
				culture_group = moraqi_group
				culture_group = asshai_group
				culture_group = nghai_group
			}
		}
	}	
}
has_antislavery_religion_trigger = {
	custom_tooltip = {
		text = has_antislavery_religion_trigger
		hidden_tooltip = {
			OR = {
				religion_group = westerosi_religion
				religion_group = summer_rel_group
				religion = moonsingers
				religion = father_of_waters
				religion = rhoynar_pagan
				religion = great_shepherd
				religion = nath_pagan
			}
		}
	}	
}
has_antislavery_culture_trigger = {
	custom_tooltip = {
		text = has_antislavery_culture_trigger
		hidden_tooltip = {
			OR = {
				culture_group = andal
				culture_group = first_men
				culture_group = dornish
				culture_group = free_folk
				culture = braavosi
				#culture = naathi
				#culture = lhazareen
			}
		}
	}	
}
has_full_slavery_trigger = {
	OR = {
		crownlaw_title = { has_law = slavery_2 }
		custom_tooltip = { # No current crown law title
			text = TOOLTIPSELLSLAVENOCROWNLAW
			hidden_tooltip = {
				independent = yes
				NOT = { crownlaw_title = { always = yes } }
				NOT = { trait = nightswatch }
				OR = {
					has_slavery_culture_trigger = yes
					has_slavery_religion_trigger = yes
				}	
			}					
		}
	}
}
can_buy_courtier_slaves_trigger = {
	OR = {
		has_full_slavery_trigger = yes
		crownlaw_title = { has_law = slavery_1 }
	}
}

can_host_citadel_trigger = {
	NOT = { trait = nightswatch }
	NOT = { has_character_flag =  rejected_citadel }
	demesne_size = 1
	higher_tier_than = COUNT
	OR = {
		culture_group = andal
		culture_group = dornish
		culture = western_valyrian
		culture_group = first_men
		capital_scope = {	region = world_westeros }
	}
	NOT = { culture = rhoynar }
	NOT = { culture = old_andal }
	NOT = { culture_group = winter_group }
	NOT = { trait = wildling }
	any_vassal = {
		primary_title = { 
			NOT = { holding_type = temple } 
			NOT = { title = b_oldtown }
			NOT = { title = b_lannisportone }
			NOT = { title = b_kings_landing }
		}
		tier = BARON
		is_patrician = no
	}
}
can_inherit_titles_trigger = {
	custom_tooltip = {
		text = can_inherit_titles_trigger
		hidden_tooltip = {
			NOR = {
				trait = bastard
				trait = eunuch
				trait = kingsguard
				trait = disinherited
				trait = nightswatch
				trait = salt_wife
				trait = dosh_khaleen
				trait = dragon
				trait = maester
				trait = archmaester
				trait = silent_sister
				trait = red_priest
				trait = drowned
				trait = grace
				trait = warlock
				trait = shadowbinder
				trait = bearded_priest
				trait = slave
				trait = septa
				trait = septon
				trait = ruin
				trait = cotf
				trait = courtesan
				trait = winter_wasteland
				trait = love_priest
				trait = horse
			}
		}
	}	
}
can_press_claims_trigger = {
	custom_tooltip = {
		text = can_press_claims_trigger
		hidden_tooltip = {
			NOR = {
				#trait = bastard
				#trait = eunuch
				trait = kingsguard
				#trait = disinherited
				trait = nightswatch
				trait = salt_wife
				trait = dosh_khaleen
				trait = dragon
				trait = maester
				trait = archmaester
				trait = silent_sister
				trait = red_priest
				trait = drowned
				trait = grace
				trait = warlock
				trait = shadowbinder
				trait = bearded_priest
				trait = slave
				trait = septa
				trait = septon
				trait = love_priest
				trait = horse
			}
		}
	}	
}
can_marry_trigger = {
	custom_tooltip = {
		text = can_marry_trigger
		hidden_tooltip = {
			NOR = {
				is_married = yes
				is_consort = yes
				is_betrothed = yes
				
				trait = eunuch
				trait = kingsguard
				trait = disinherited
				trait = nightswatch
				trait = salt_wife
				trait = dosh_khaleen
				trait = dragon
				trait = maester
				trait = archmaester
				trait = silent_sister
				trait = red_priest
				trait = drowned
				trait = grace
				trait = warlock
				trait = shadowbinder
				trait = bearded_priest
				trait = slave
				trait = septa
				trait = septon
				trait = has_missing
				
				trait = giant
				trait = widowed
				trait = forbid_marriage
				trait = ruin
				trait = cotf
				trait = courtesan
				trait = white_walker
				trait = winter_wasteland
				trait = love_priest
				trait = horse
			}
		}
	}	
}
is_summer_trigger = {
	custom_tooltip = {
		text = is_summer_trigger
		hidden_tooltip = {
			OR = {
				has_global_flag = short_summer
				has_global_flag = normal_summer
				has_global_flag = long_summer
			}
		}
	}	
}
is_winter_trigger = {
	custom_tooltip = {
		text = is_winter_trigger
		hidden_tooltip = {
			OR = {
				has_global_flag = asoiaf_mild_winter
				has_global_flag = asoiaf_normal_winter
				has_global_flag = asoiaf_harsh_winter
			}
		}
	}	
}
eligible_trial_by_combat_champion_for_ROOT_trigger = {
	age = 16
	OR = {
		is_female = no
		ROOT = {
			culture_group = hyrkoon_group
		}	
	}
	OR = {
		liege = { character = ROOT }
		is_close_relative = ROOT
		is_friend = ROOT
	}	
	OR = {
		trait = poor_warrior
		trait = trained_warrior
		trait = skilled_warrior
		trait = master_warrior
	}	
	NOT = { has_severe_disability_trigger = yes }	
	NOT = { trait = dragon }
	NOT = { trait = horse }
	NOT = { ROOT = { host = { character = PREVPREV } } }
	OR = {
		ROOT = { has_landed_title = e_iron_throne }
		liege = { character = ROOT }
		NOT = { trait = kingsguard }
	}		
	OR = {
		liege = { character = ROOT }
		NOT = { trait = slave }
	}
	is_ill = no
	prisoner = no	
	opinion = { who = ROOT value = 0 }  #TESTING POURPOSES CHANGE -99 TO 50	
	NOT = { 
		reverse_has_opinion_modifier = {
			who = ROOT
			modifier = refused_championing
		}
	}
}
eligible_trial_by_combat_champion_for_FROM_trigger = {
	age = 16
	OR = {
		is_female = no
		FROM = {
			culture_group = hyrkoon_group
		}	
	}
	OR = {
		liege = { character = FROM }
		is_close_relative = FROM
		is_friend = FROM
	}	
	OR = {
		trait = poor_warrior
		trait = trained_warrior
		trait = skilled_warrior
		trait = master_warrior
	}	
	NOT = { has_severe_disability_trigger = yes }	
	NOT = { trait = dragon }
	NOT = { trait = horse }
	NOT = { FROM = { host = { character = PREVPREV } } }
	OR = {
		FROM = { has_landed_title = e_iron_throne }
		liege = { character = FROM }
		NOT = { trait = kingsguard }
	}		
	OR = {
		liege = { character = FROM }
		NOT = { trait = slave }
	}
	is_ill = no
	prisoner = no	
	opinion = { who = FROM value = 0 }  #TESTING POURPOSES CHANGE -99 TO 50	
	NOT = { 
		reverse_has_opinion_modifier = {
			who = FROM
			modifier = refused_championing
		}
	}
}
below_consort_limit_trigger = {
	custom_tooltip = {
		text = TOOLTIPbelow_consort_limit_trigger
		hidden_tooltip = {
			OR = {
				NOT = { num_of_consorts = 7 } #Most religions/governments with concubinage have 7 as the limit...
				AND = { #...except these, which have 20
					NOT = { num_of_consorts = 20 }
					OR = {
						religion = drowned_god
						religion = gods_bone_mountains
						religion = dothraki_pagan
						religion = jogos_pagan
						religion = yiti_gods
						government = pirate_government
						government = nomadic_government
					}
				}
			}
		}
	}
}
allow_temple_buildings_trigger = {
	OR = {
		AND = {
			religion = the_seven
			crownlaw_title = { has_law = investiture_law_3 }
		}	
		religion = rhllor
		religion = moonsingers
		religion = harpy
		religion = bearded_priests
		religion = summer_rel
	}
}
just_execution_reason_PREV_trigger = { #PREV has a valid reason to execute/exile THIS
	custom_tooltip = {
		text = TOOLTIPjust_execution_reason_PREV
		hidden_tooltip = {
			OR = {
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_rebel_traitor }			
				reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_vassal }
				reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder }
				reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_close_kin }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_cuckolded }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_murdered_first_ranger }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_vengeance }
				reverse_has_opinion_modifier = { who = PREV modifier = kidnapped_me }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_defeated_khal }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_joined_rebellion }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor_AGOT }	
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_found_guilty }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_confessed }
				reverse_has_opinion_modifier = { who = PREV modifier = opinion_kidnapped_kin }
			}	
		}
	}
}
is_in_interregnum_trigger = {
	custom_tooltip = {
		text = TOOLTIPis_in_interregnum_trigger
		hidden_tooltip = {
			is_feudal = yes
			controls_religion = no
			is_patrician = no
			NOT = { trait = nightswatch }
			higher_tier_than = DUKE
			primary_title = {		
				is_variable_equal = { which = "lord_paramount_status" value = 2 } #1 = lord paramount, 2 = interregnum
			}	
		}
	}
}
demanded_trial_by_combat_trigger = {
	custom_tooltip = {
		text = TOOLTIPdemanded_trial_by_combat
		hidden_tooltip = {
			has_character_flag = demmanded_trial_by_combat
			NOT = { had_character_flag = { flag = demmanded_trial_by_combat days = 365 } }
		}
	}
}
eligible_triarch_trigger = {
	age = 15
	prisoner = no
	NOT = { is_incapable = yes }
	can_press_claims_trigger = yes
	NOT = { trait = former_slave }
	OR = { #Must belong to a party
		trait = elephant
		trait = tiger
	}	
	OR = { #Must be of Valyrian blood, or not be in a valyrian republic
		culture = high_valyrian
		culture = western_valyrian
		culture = eastern_valyrian
		is_merchant_republic = yes
		any_liege = { is_merchant_republic = yes culture = volantene }
	}	
	NOT = { dynasty = 0 }
	NOT = { has_character_modifier = deposed_AGOT }
}
can_use_dragon_conquest_trigger = {
	trait = dragon_rider
	independent = yes
	any_friend = {
		trait = dragon
		martial = 10
		NOT = { trait = maimed_dragon }
	}
}
is_divine_blood_dynasty_trigger = {
	custom_tooltip = {
		text = is_divine_blood_dynasty_trigger
		hidden_tooltip = {
			OR = {
				dynasty = 496 #Targaryen
				dynasty = 57 #Blackfyre
				dynasty = 497 #Aegons "of Essos"
				#Targ Cadets
				dynasty = 45000204
				dynasty = 45000205
				dynasty = 45000206
				dynasty = 45000207
				
				dynasty = 174419 #Codd
				
				has_dynasty_flag = coin_flip_dynasty
			}
		}
	}	
}
high_valyrian_dynasty_trigger = {
	custom_tooltip = {
		text = high_valyrian_dynasty_trigger
		hidden_tooltip = {
			OR = {
				dynasty = 496 #Targaryen
				dynasty = 57 #Blackfyre
				dynasty = 52 #Velaryon
				dynasty = 497 #Aegons "of Essos"
				#Targ Cadets
				dynasty = 45000204
				dynasty = 45000205
				dynasty = 45000206
				dynasty = 45000207
				has_dynasty_flag = high_valyrian
			}
		}
	}	
}
is_coin_flip_dynasty_trigger = {
	custom_tooltip = {
		text = is_coin_flip_dynasty_trigger
		hidden_tooltip = {
			OR = {
				dynasty = 496 #Targaryen
				dynasty = 57 #Blackfyre
				dynasty = 7000 #Bittersteel
				dynasty = 7001 #Bloodraven - not currently used
				dynasty = 7002 #Seastar - not currently used
				dynasty = 497 #Aegons "of Essos"
				#Targ Cadets
				dynasty = 45000204
				dynasty = 45000205
				dynasty = 45000206
				dynasty = 45000207
				has_dynasty_flag = coin_flip_dynasty
			}
		}
	}
}
is_weak_khal_trigger = {
	custom_tooltip = {
		text = is_weak_khal_trigger
		hidden_tooltip = {
			OR = {
				NOT = { prestige = 0 }
				NOR = {
					martial = 10
					trait = skilled_warrior
					trait = master_warrior
				}
				prisoner = yes
				has_severe_disability_trigger = yes
				is_weak_trigger = yes
				trait = imbecile
				trait = dwarf
				trait = clubfooted
				trait = eunuch
				trait = in_hiding
				trait = craven
			}
		}
	}
}

base_value_1_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_1
		has_building = ca_asoiaf_river_basevalue_1
		has_building = ca_asoiaf_dorne_basevalue_1
		has_building = ca_asoiaf_ironislands_basevalue_1
		has_building = ca_asoiaf_crown_basevalue_1
		has_building = ca_asoiaf_storm_basevalue_1
		has_building = ca_asoiaf_vale_basevalue_1
		has_building = ca_asoiaf_westerland_basevalue_1
		has_building = ca_asoiaf_reach_basevalue_1
		has_building = ca_asoiaf_essos_basevalue_1
		has_building = ca_asoiaf_summerisland_basevalue_1
		has_building = ca_asoiaf_qarth_basevalue_1
		has_building = ca_asoiaf_ghiscari_basevalue_1
		has_building = ca_asoiaf_lhazareen_basevalue_1
		has_building = ca_asoiaf_nighswatch_basevalue_1
		has_building = ca_asoiaf_eastern_basevalue_1
		has_building = ca_asoiaf_yiti_basevalue_1
		has_building = ca_asoiaf_ibben_basevalue_1
		has_building = ca_asoiaf_sarnor_basevalue_1
		has_building = ca_asoiaf_asshai_basevalue_1
		has_building = ct_asoiaf_north_basevalue_1
		has_building = ct_asoiaf_river_basevalue_1
		has_building = ct_asoiaf_dorne_basevalue_1
		has_building = ct_asoiaf_ironislands_basevalue_1
		has_building = ct_asoiaf_crown_basevalue_1
		has_building = ct_asoiaf_storm_basevalue_1
		has_building = ct_asoiaf_vale_basevalue_1
		has_building = ct_asoiaf_westerland_basevalue_1
		has_building = ct_asoiaf_reach_basevalue_1
		has_building = ct_asoiaf_essos_basevalue_1
		has_building = ct_asoiaf_summerisland_basevalue_1
		has_building = ct_asoiaf_qarth_basevalue_1
		has_building = ct_asoiaf_ghiscari_basevalue_1
		has_building = ct_asoiaf_lhazareen_basevalue_1
		has_building = ct_asoiaf_eastern_basevalue_1
		has_building = ct_asoiaf_yiti_basevalue_1
		has_building = ct_asoiaf_ibben_basevalue_1
		has_building = ct_asoiaf_sarnor_basevalue_1
		has_building = ct_asoiaf_asshai_basevalue_1
	}
}
base_value_2_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_2
		has_building = ca_asoiaf_river_basevalue_2
		has_building = ca_asoiaf_dorne_basevalue_2
		has_building = ca_asoiaf_ironislands_basevalue_2
		has_building = ca_asoiaf_crown_basevalue_2
		has_building = ca_asoiaf_storm_basevalue_2
		has_building = ca_asoiaf_vale_basevalue_2
		has_building = ca_asoiaf_westerland_basevalue_2
		has_building = ca_asoiaf_reach_basevalue_2
		has_building = ca_asoiaf_essos_basevalue_2
		has_building = ca_asoiaf_summerisland_basevalue_2
		has_building = ca_asoiaf_qarth_basevalue_2
		has_building = ca_asoiaf_ghiscari_basevalue_2
		has_building = ca_asoiaf_lhazareen_basevalue_2
		has_building = ca_asoiaf_nighswatch_basevalue_2
		has_building = ca_asoiaf_eastern_basevalue_2
		has_building = ca_asoiaf_yiti_basevalue_2
		has_building = ca_asoiaf_ibben_basevalue_2
		has_building = ca_asoiaf_sarnor_basevalue_2
		has_building = ca_asoiaf_asshai_basevalue_2
		has_building = ct_asoiaf_north_basevalue_2
		has_building = ct_asoiaf_river_basevalue_2
		has_building = ct_asoiaf_dorne_basevalue_2
		has_building = ct_asoiaf_ironislands_basevalue_2
		has_building = ct_asoiaf_crown_basevalue_2
		has_building = ct_asoiaf_storm_basevalue_2
		has_building = ct_asoiaf_vale_basevalue_2
		has_building = ct_asoiaf_westerland_basevalue_2
		has_building = ct_asoiaf_reach_basevalue_2
		has_building = ct_asoiaf_essos_basevalue_2
		has_building = ct_asoiaf_summerisland_basevalue_2
		has_building = ct_asoiaf_qarth_basevalue_2
		has_building = ct_asoiaf_ghiscari_basevalue_2
		has_building = ct_asoiaf_lhazareen_basevalue_2
		has_building = ct_asoiaf_eastern_basevalue_2
		has_building = ct_asoiaf_yiti_basevalue_2
		has_building = ct_asoiaf_ibben_basevalue_2
		has_building = ct_asoiaf_sarnor_basevalue_2
		has_building = ct_asoiaf_asshai_basevalue_2
	}
}
base_value_3_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_3
		has_building = ca_asoiaf_river_basevalue_3
		has_building = ca_asoiaf_dorne_basevalue_3
		has_building = ca_asoiaf_ironislands_basevalue_3
		has_building = ca_asoiaf_crown_basevalue_3
		has_building = ca_asoiaf_storm_basevalue_3
		has_building = ca_asoiaf_vale_basevalue_3
		has_building = ca_asoiaf_westerland_basevalue_3
		has_building = ca_asoiaf_reach_basevalue_3
		has_building = ca_asoiaf_essos_basevalue_3
		has_building = ca_asoiaf_summerisland_basevalue_3
		has_building = ca_asoiaf_qarth_basevalue_3
		has_building = ca_asoiaf_ghiscari_basevalue_3
		has_building = ca_asoiaf_lhazareen_basevalue_3
		has_building = ca_asoiaf_nighswatch_basevalue_3
		has_building = ca_asoiaf_eastern_basevalue_3
		has_building = ca_asoiaf_yiti_basevalue_3
		has_building = ca_asoiaf_ibben_basevalue_3
		has_building = ca_asoiaf_sarnor_basevalue_3
		has_building = ca_asoiaf_asshai_basevalue_3
		has_building = ct_asoiaf_north_basevalue_3
		has_building = ct_asoiaf_river_basevalue_3
		has_building = ct_asoiaf_dorne_basevalue_3
		has_building = ct_asoiaf_ironislands_basevalue_3
		has_building = ct_asoiaf_crown_basevalue_3
		has_building = ct_asoiaf_storm_basevalue_3
		has_building = ct_asoiaf_vale_basevalue_3
		has_building = ct_asoiaf_westerland_basevalue_3
		has_building = ct_asoiaf_reach_basevalue_3
		has_building = ct_asoiaf_essos_basevalue_3
		has_building = ct_asoiaf_summerisland_basevalue_3
		has_building = ct_asoiaf_qarth_basevalue_3
		has_building = ct_asoiaf_ghiscari_basevalue_3
		has_building = ct_asoiaf_lhazareen_basevalue_3
		has_building = ct_asoiaf_eastern_basevalue_3
		has_building = ct_asoiaf_yiti_basevalue_3
		has_building = ct_asoiaf_ibben_basevalue_3
		has_building = ct_asoiaf_sarnor_basevalue_3
		has_building = ct_asoiaf_asshai_basevalue_3
	}
}
base_value_4_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_4
		has_building = ca_asoiaf_river_basevalue_4
		has_building = ca_asoiaf_dorne_basevalue_4
		has_building = ca_asoiaf_ironislands_basevalue_4
		has_building = ca_asoiaf_crown_basevalue_4
		has_building = ca_asoiaf_storm_basevalue_4
		has_building = ca_asoiaf_vale_basevalue_4
		has_building = ca_asoiaf_westerland_basevalue_4
		has_building = ca_asoiaf_reach_basevalue_4
		has_building = ca_asoiaf_essos_basevalue_4
		has_building = ca_asoiaf_summerisland_basevalue_4
		has_building = ca_asoiaf_qarth_basevalue_4
		has_building = ca_asoiaf_ghiscari_basevalue_4
		has_building = ca_asoiaf_lhazareen_basevalue_4
		#has_building = ca_asoiaf_nighswatch_basevalue_4
		has_building = ca_asoiaf_eastern_basevalue_4
		has_building = ca_asoiaf_yiti_basevalue_4
		has_building = ca_asoiaf_ibben_basevalue_4
		has_building = ca_asoiaf_sarnor_basevalue_4
		has_building = ca_asoiaf_asshai_basevalue_4
		has_building = ct_asoiaf_north_basevalue_4
		has_building = ct_asoiaf_river_basevalue_4
		has_building = ct_asoiaf_dorne_basevalue_4
		has_building = ct_asoiaf_ironislands_basevalue_4
		has_building = ct_asoiaf_crown_basevalue_4
		has_building = ct_asoiaf_storm_basevalue_4
		has_building = ct_asoiaf_vale_basevalue_4
		has_building = ct_asoiaf_westerland_basevalue_4
		has_building = ct_asoiaf_reach_basevalue_4
		has_building = ct_asoiaf_essos_basevalue_4
		has_building = ct_asoiaf_summerisland_basevalue_4
		has_building = ct_asoiaf_qarth_basevalue_4
		has_building = ct_asoiaf_ghiscari_basevalue_4
		has_building = ct_asoiaf_lhazareen_basevalue_4
		has_building = ct_asoiaf_eastern_basevalue_4
		has_building = ct_asoiaf_yiti_basevalue_4
		has_building = ct_asoiaf_ibben_basevalue_4
		has_building = ct_asoiaf_sarnor_basevalue_4
		has_building = ct_asoiaf_asshai_basevalue_4
	}
}
base_value_5_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_5
		has_building = ca_asoiaf_river_basevalue_5
		has_building = ca_asoiaf_dorne_basevalue_5
		has_building = ca_asoiaf_ironislands_basevalue_5
		has_building = ca_asoiaf_crown_basevalue_5
		has_building = ca_asoiaf_storm_basevalue_5
		has_building = ca_asoiaf_vale_basevalue_5
		has_building = ca_asoiaf_westerland_basevalue_5
		has_building = ca_asoiaf_reach_basevalue_5
		has_building = ca_asoiaf_essos_basevalue_5
		has_building = ca_asoiaf_summerisland_basevalue_5
		has_building = ca_asoiaf_qarth_basevalue_5
		has_building = ca_asoiaf_ghiscari_basevalue_5
		has_building = ca_asoiaf_lhazareen_basevalue_5
		#has_building = ca_asoiaf_nighswatch_basevalue_5
		has_building = ca_asoiaf_eastern_basevalue_5
		has_building = ca_asoiaf_yiti_basevalue_5
		has_building = ca_asoiaf_ibben_basevalue_5
		has_building = ca_asoiaf_sarnor_basevalue_5
		has_building = ca_asoiaf_asshai_basevalue_5
		has_building = ct_asoiaf_north_basevalue_5
		has_building = ct_asoiaf_river_basevalue_5
		has_building = ct_asoiaf_dorne_basevalue_5
		has_building = ct_asoiaf_ironislands_basevalue_5
		has_building = ct_asoiaf_crown_basevalue_5
		has_building = ct_asoiaf_storm_basevalue_5
		has_building = ct_asoiaf_vale_basevalue_5
		has_building = ct_asoiaf_westerland_basevalue_5
		has_building = ct_asoiaf_reach_basevalue_5
		has_building = ct_asoiaf_essos_basevalue_5
		has_building = ct_asoiaf_summerisland_basevalue_5
		has_building = ct_asoiaf_qarth_basevalue_5
		has_building = ct_asoiaf_ghiscari_basevalue_5
		has_building = ct_asoiaf_lhazareen_basevalue_5
		has_building = ct_asoiaf_eastern_basevalue_5
		has_building = ct_asoiaf_yiti_basevalue_5
		has_building = ct_asoiaf_ibben_basevalue_5
		has_building = ct_asoiaf_sarnor_basevalue_5
		has_building = ct_asoiaf_asshai_basevalue_5
	}
}
base_value_6_trigger = {
	OR = {
		has_building = ca_asoiaf_north_basevalue_6
		has_building = ca_asoiaf_river_basevalue_6
		has_building = ca_asoiaf_dorne_basevalue_6
		has_building = ca_asoiaf_ironislands_basevalue_6
		has_building = ca_asoiaf_crown_basevalue_6
		has_building = ca_asoiaf_storm_basevalue_6
		has_building = ca_asoiaf_vale_basevalue_6
		has_building = ca_asoiaf_westerland_basevalue_6
		has_building = ca_asoiaf_reach_basevalue_6
		has_building = ca_asoiaf_essos_basevalue_6
		has_building = ca_asoiaf_summerisland_basevalue_6
		has_building = ca_asoiaf_qarth_basevalue_6
		has_building = ca_asoiaf_ghiscari_basevalue_6
		has_building = ca_asoiaf_lhazareen_basevalue_6
		#has_building = ca_asoiaf_nighswatch_basevalue_6
		has_building = ca_asoiaf_eastern_basevalue_6
		has_building = ca_asoiaf_yiti_basevalue_6
		has_building = ca_asoiaf_ibben_basevalue_6
		has_building = ca_asoiaf_sarnor_basevalue_6
		has_building = ca_asoiaf_asshai_basevalue_6
		has_building = ct_asoiaf_north_basevalue_6
		has_building = ct_asoiaf_river_basevalue_6
		has_building = ct_asoiaf_dorne_basevalue_6
		has_building = ct_asoiaf_ironislands_basevalue_6
		has_building = ct_asoiaf_crown_basevalue_6
		has_building = ct_asoiaf_storm_basevalue_6
		has_building = ct_asoiaf_vale_basevalue_6
		has_building = ct_asoiaf_westerland_basevalue_6
		has_building = ct_asoiaf_reach_basevalue_6
		has_building = ct_asoiaf_essos_basevalue_6
		has_building = ct_asoiaf_summerisland_basevalue_6
		has_building = ct_asoiaf_qarth_basevalue_6
		has_building = ct_asoiaf_ghiscari_basevalue_6
		has_building = ct_asoiaf_lhazareen_basevalue_6
		has_building = ct_asoiaf_eastern_basevalue_6
		has_building = ct_asoiaf_yiti_basevalue_6
		has_building = ct_asoiaf_ibben_basevalue_6
		has_building = ct_asoiaf_sarnor_basevalue_6
		has_building = ct_asoiaf_asshai_basevalue_6
	}
}
has_sympathy_trait_trigger = {
	OR = {
		trait = sympathy_westerosi
		trait = sympathy_drowned_god
		trait = sympathy_essos_group
		trait = sympathy_ghiscar_rel
		trait = sympathy_valyrian_rel_group
		trait = sympathy_wildling_religion
		trait = sympathy_sarnor_rel
		trait = sympathy_qarth_rel
		trait = sympathy_far_east_group
		trait = sympathy_ibben_rel
		trait = sympathy_dothraki_rel_group
		trait = sympathy_jogos_rel_group
		trait = sympathy_lhazar_rel_group
		trait = sympathy_summer_rel_group
		trait = sympathy_sothoryos_rel_group
		trait = sympathy_pirate_group
		trait = sympathy_pagans
	}
}
can_be_kingsguard_candidate_trigger = {
	is_female = no
	is_married = no
	prisoner = no
	OR = {
		AND = {
			religion = ROOT
			NOT = { religion = the_seven }
		}	
		trait = knight
	}	
	age = 14		
	OR = {
		trait = master_warrior
		trait = skilled_warrior
		trait = trained_warrior
	}
	OR = { #Lowborns must be well known
		AND = {
			NOT = { dynasty = 0 }
			father_even_if_dead = { always = yes }
		}	
		prestige = 300
		liege = { has_landed_title = e_iron_throne }
	}
	is_ruler = no
	can_press_claims_trigger = yes #no other disinheriting traits
	NOT_mythical_creature_trigger = yes
	NOT = { has_severe_disability_trigger = yes }
	NOT = { is_rival = ROOT }
	NOT = { character = ROOT }	
	NOT = { has_character_flag = wikid_companion }
	NOT = { has_character_flag = refused_kingsguard }	
}
highborn_kingsguard_candidate_trigger = {	
	OR = {
		any_close_relative = {
			OR = {
				higher_tier_than = COUNT
				AND = { 
					tier = COUNT
					prestige = 500
				}
			}
		}
		any_claim = { higher_tier_than = COUNT }
		dynastic_prestige = 250
	}	
	NOT = { dynasty = 0 }
	combat_rating = 5.17	
}
nightswatch_culture_trigger = {
	OR = {
		AND = {
			culture_group = andal
			NOT = { culture = old_andal }
		}	
		culture = ironborn
		AND = {
			culture_group = dornish
			NOT = { culture = rhoynar }
		}	
		culture = western_valyrian
		culture_group = first_men
		capital_scope = { region = world_westeros }
	}	
	NOT = { trait = wildling }
	NOT = { culture_group = winter_group }
	NOT = { culture_group = unoccupied_group }
}
magic_returned_trigger = {
	custom_tooltip = {
		text = magic_returned_trigger
		hidden_tooltip = { has_global_flag = age_of_dragons }
	}
}
seniority_culture_trigger = {
	OR = {
		culture = summer_islander
		culture_group = hyrkoon_group
	}
}
agnatic_culture_trigger = {
	OR = {		
		culture = ironborn 
		culture = eastern_valyrian
		culture = mantaryan
		culture = tolosi
		culture = elyrian	
		religion = pirate
		religion = corsair
		culture = dothraki
		culture_group = hyrkoon_group
		custom_tooltip = {
			text = TOOLTIPHOUSELIKESLAW
			has_dynasty_flag = prefers_agnatic
		}
	}
}
true_cognatic_culture_trigger = {
	OR = {
		culture_group = dornish 		
		culture = jogos_nhai
		custom_tooltip = {
			text = TOOLTIPHOUSELIKESLAW
			has_dynasty_flag = prefers_cognatic
		}
	}
}
enatic_culture_trigger = {
	OR = {
		AND = { #God Empresses			
			OR = {
				culture = yi_ti
				culture = lengi
			}	
			higher_tier_than = DUKE
			capital_scope = { region = world_leng }
			NOT = { has_landed_title = e_yi_ti }
		}
		AND = {
			has_landed_title = c_dosh_khaleen 
			trait = dosh_khaleen
		}
	}	
}
valid_exile_destination_ROOT_trigger = { #FROM is the exiler
	demesne_size = 1
	NOT = { character = FROM }
	OR = {
		ROOT = { has_character_flag = trial_exile }
		AND = {
			NOT = { is_liege_or_above = FROM }
			NOT = { has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege } }
			NOT = { any_liege = { has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege } } }
		}
	}
	NOT = { is_liege_of = ROOT }
	OR = {
		same_realm = FROM
		is_within_diplo_range = FROM
	}	
	
	NOT = { trait = nightswatch }
	NOT = { culture_group = unoccupied_group }
	NOT = { culture_group = winter_group }
	OR = {
		NOT = { trait = wildling }
		ROOT = { trait = wildling }
		ROOT = { trait = deserter }
	}	
	OR = {
		NOT = { culture = old_andal }
		higher_tier_than = DUKE
		ROOT = { culture = old_andal }
	}
	OR = {
		NOT = { culture = rhoynar }
		higher_tier_than = DUKE
		ROOT = { culture = rhoynar }
	}	
	OR = {
		NOT = { trait = pirate }
		ROOT = { trait = pirate }
	}
	OR = {
		NOT = { is_nomadic = yes }
		ROOT = { is_nomadic = yes }
	}
	OR = { #slaves flee to non-slavery location
		ROOT = { NOT = { trait = slave } }
		crownlaw_title = { has_law = slavery_0 }			
	}
}
has_tanned_skin_trigger = {
	OR = {
		#graphical_culture = occitangfx 
		graphical_culture = italiangfx 
		graphical_culture = southerngfx
		#graphical_culture = byzantinegfx
		graphical_culture = easternslavicgfx
		graphical_culture = turkishgfx 
		graphical_culture = cumangfx
		graphical_culture = mongolgfx
		#graphical_culture = persiangfx
		graphical_culture = saltdornishgfx
		graphical_culture = yitigfx
		graphical_culture = jogosgfx
	}
}
has_bronzed_skin_trigger = {
	OR = {
		#graphical_culture = arabicgfx
		#graphical_culture = andalusiangfx
		graphical_culture = muslimgfx
		graphical_culture = mesoamericangfx
		graphical_culture = sanddornishgfx
		graphical_culture = ghiscarigfx
		graphical_culture = sarnorigfx
	}
}
has_dark_skin_trigger = {
	OR = {
		graphical_culture = africangfx
		graphical_culture = westafricangfx
		graphical_culture = naathigfx
	}
}
has_copper_skin_trigger = {
	OR = {
		graphical_culture = indiangfx
		graphical_culture = southindiangfx
		graphical_culture = dothrakigfx
		graphical_culture = lhazareengfx
	}
}
has_white_skin_trigger = {
	NOR = {
		has_tanned_skin_trigger = yes
		has_bronzed_skin_trigger = yes
		has_dark_skin_trigger = yes
		has_copper_skin_trigger = yes
		graphical_culture = islandergfx
		graphical_culture = giantgfx
		graphical_culture = cotfgfx
		graphical_culture = whitewalkergfx
	}
}
has_silver_hair_ethnicity_trigger = {
	OR = { 
		graphical_culture = valyriangfx 
		graphical_culture = westvalyriangfx
		graphical_culture = lysenegfx
	}
}

has_house_words_trigger = {
	OR = {
		dynasty = 9
		dynasty = 297
		dynasty = 178
		dynasty = 8000178
		dynasty = 265
		dynasty = 317
		dynasty = 1544
		dynasty = 282
		dynasty = 87
		dynasty = 34
		dynasty = 284
		dynasty = 301
		dynasty = 61
		dynasty = 174419
		dynasty = 227
		dynasty = 175
		dynasty = 84
		dynasty = 21
		dynasty = 248
		dynasty = 1443
		dynasty = 261
		dynasty = 14
		dynasty = 242
		dynasty = 308
		dynasty = 107
		dynasty = 267
		dynasty = 285
		dynasty = 83
		dynasty = 10
		dynasty = 89
		dynasty = 190
		dynasty = 305
		dynasty = 212
		dynasty = 1
		dynasty = 102
		dynasty = 128
		dynasty = 263
		dynasty = 138
		dynasty = 237
		dynasty = 219
		dynasty = 320
		dynasty = 157
		dynasty = 226
		dynasty = 183
		dynasty = 187
		dynasty = 233
		dynasty = 2159
		dynasty = 221
		dynasty = 156
		dynasty = 59
		dynasty = 35
		dynasty = 361
		dynasty = 228
		dynasty = 101
		dynasty = 496
		dynasty = 296
		dynasty = 162
		dynasty = 307
		dynasty = 304
		dynasty = 159
		dynasty = 253
		dynasty = 52
		dynasty = 189
		dynasty = 44
		dynasty = 333
		dynasty = 199
		dynasty = 2158
		dynasty = 70
		dynasty = 136
		dynasty = 180
		dynasty = 12
	}
}

has_chosen_syncretic_faith_trigger = {
	custom_tooltip = {
		text = TOOLTIPhas_chosen_syncretic_faith
		hidden_tooltip = {
			OR = {
				has_character_modifier = syncretic_faith_westerosi_religion
				has_character_modifier = syncretic_faith_wildling_religion
				has_character_modifier = syncretic_faith_drowned_god_group
				has_character_modifier = syncretic_faith_essos_group
				has_character_modifier = syncretic_faith_sarnor_rel
				has_character_modifier = syncretic_faith_qarth_rel
				has_character_modifier = syncretic_faith_ghiscar_rel
				has_character_modifier = syncretic_faith_far_east_group
				has_character_modifier = syncretic_faith_ibben_rel
				has_character_modifier = syncretic_faith_dothraki_rel_group
				has_character_modifier = syncretic_faith_jogos_rel_group
				has_character_modifier = syncretic_faith_lhazar_rel_group
				has_character_modifier = syncretic_faith_summer_rel_group
				has_character_modifier = syncretic_faith_pirate_group
				has_character_modifier = syncretic_faith_islands_rel
				has_character_modifier = syncretic_faith_sothoryos_rel_group
				has_character_modifier = syncretic_faith_pagan_group
			}
		}
	}
}
has_dragonpit_trigger = {
	OR = {
		capital_holding = { has_building = ca_dragon_pit }
		family_palace = { has_building = fp_dragon_pit }
		AND = {
			is_ruler = no
			liege = { 
				OR = {
					capital_holding = { has_building = ca_dragon_pit }
					family_palace = { has_building = fp_dragon_pit }
				}
			}
		}
	}
}
cannot_outbreed_trigger = {
	OR = {
		#ibbenese
		graphical_culture = celticgfx	
		graphical_culture = ibbenesegfx	
		AND = {
			culture = brindlemen
			OR = {
				graphical_culture = westafricangfx
				graphical_culture = africangfx
				graphical_culture = muslimgfx
			}
		}	
		#giant
		graphical_culture = giantgfx
	}
}
has_alchemists_guild_prerequisites = {
	age = 16
	OR = {
		trait = mystic
		trait = scholar
		trait = fire_obsessed
		trait = lunatic			
	}
	is_nomadic = no
	OR = { #wildlings can only join if south of The Wall
		NOT = { trait = wildling }
		capital_scope = { NOT = { region = world_beyond_the_wall } }
		AND = {
			is_ruler = no
			liege = { capital_scope = { NOT = { region = world_beyond_the_wall } } }
		}
	}
	NOR = {
		trait = kingsguard
		#trait = nightswatch
		trait = maester
		trait = archmaester
		has_priest_trait_trigger = yes
	}
}
wearing_asshai_mask_trigger = {
	culture = asshai
	NOT = { trait = shadowbinder }				
	location = { province_id = 795 }
	in_command = no
	NOT = { has_character_modifier = holding_large_feast }#not worn during feasts
	NOT = { liege = { has_character_modifier = holding_large_feast } }
}
wearing_shadowlander_mask_trigger = {
	culture = shadowlander
	OR = {
		has_character_modifier = holding_large_feast
		liege = { has_character_modifier = holding_large_feast }
		in_command = yes
	}
	NOT = { trait = slave }
}
has_pilgrimage_trait_trigger = { #used for disease immunity, and seclusion prevention
	OR = {
		trait = wikid
		trait = on_reaving
		trait = on_pilgrimage
		trait = has_missing
	}
}
has_bastard_nickname_trigger = {
	OR = {
		has_nickname = nick_snow
		has_nickname = nick_rivers
		has_nickname = nick_stone
		has_nickname = nick_hill
		has_nickname = nick_flowers
		has_nickname = nick_storm
		has_nickname = nick_waters
		has_nickname = nick_sand
		has_nickname = nick_pyke
	}
}
PREV_has_abused_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_me}
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_me }	
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_humiliated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_enslaved_me }
	}
}
PREV_has_abused_relative_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_son }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_castrated_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_blinded_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_wife_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_relative_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_humiliated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_humiliated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_flayed_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_upon_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_friend }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_oubilette_lover }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_enslaved_close_relative }
	}
}
PREV_has_murder_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_vengeance }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_murdered_first_ranger }
		reverse_has_opinion_modifier = { who = PREV modifier = suspect_of_murder }
		reverse_has_opinion_modifier = { who = PREV modifier = accused_of_murder }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_murderer }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_aborted_my_child }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_peasant_hunting }
	}
}
PREV_has_attempted_murder_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder } 
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_vassal }
	}
}
PREV_has_treason_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_joined_rebellion }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_traitor_AGOT }	
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_rebel_traitor }	
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_refused_order }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_charge_traitor }
		reverse_has_opinion_modifier = { who = PREV modifier = declared_me_insane }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_exiled_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_assaulted_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_refused_prisoner_transfer }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_warden_no_defend }
	}
}
PREV_has_adultery_opinion_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cuckolded }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_wife }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_husband }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cuckolded_AGOT }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_deceiver }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_scandalised_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_scandalised_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_unfaithful_consort }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_slept_with_my_consort }
	}
}
has_priest_trait_trigger = {
	OR = {
		trait = dosh_khaleen
		trait = silent_sister
		trait = red_priest
		trait = drowned
		trait = grace
		trait = warlock
		trait = shadowbinder
		trait = bearded_priest
		trait = septa
		trait = septon
		trait = love_priest
	}
}
traditional_nomad_territory_trigger = {
	OR = {
		region = world_dothraki_sea
		region = world_jogo_nhai_plains
	}
}
has_black_nickname_prereq_trigger = {
	OR = {
		trait = cruel
		trait = impaler
		AND = {
			trait = ruthless
			trait = wroth
		}
		trait = nightswatch
		trait = kinslayer
		trait = excommunicated
	}
}
has_white_nickname_prereq_trigger = {
	trait = kingsguard
}
has_crazed_nickname_prereq_trigger = {
	OR = {
		trait = lunatic
		trait = possessed
	}
}
has_wroth_nickname_prereq_trigger = {
	trait = wroth
}
has_red_nickname_prereq_trigger = {
	OR = {
		combat_rating = 9
		has_character_modifier = known_murderer
		trait = kinslayer
		AND = {
			martial = 15
			OR = {
				in_command = yes
				has_job_title = job_marshal
				has_minor_title = title_commander
				trait = aggressive_leader
			}
		}
		trait = berserker
		trait = viking
		trait = ravager
		trait = seaking
		trait = sea_queen
		trait = duelist
		trait = red_priest
	}
}
has_big_nickname_prereq_trigger = {
	OR = {
		trait = gluttonous
		trait = tall
	}
	NOT = { trait = dwarf }
}
has_strong_nickname_prereq_trigger = {
	is_strong_trigger = yes
}
has_fair_nickname_prereq_trigger = {
	is_attractive_trigger = yes
	diplomacy = 12
}
has_ugly_nickname_prereq_trigger = {
	OR = {
		trait = ugly
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = disfigured_AGOT
		trait = disfigured				
		trait = greyscale_scarred
	}
}
has_little_nickname_prereq_trigger = {
	trait = dwarf
}
has_genius_nickname_prereq_trigger = {
	OR = {
		trait = genius
		AND = {
			age = 35
			OR = {
				is_smart_trigger = yes
				learning = 15
			}
		}
	}
	is_dumb_trigger	= no
}
has_dumb_nickname_prereq_trigger = {
	is_dumb_trigger	= yes
}
has_dark_nickname_prereq_trigger = {
	intrigue = 12
	OR = {
		trait = ruthless
		trait = wroth
		combat_rating = 7
		trait = depressed
		trait = mystic
		trait = schemer
	}
}
has_weak_nickname_prereq_trigger = {
	OR = {
		is_weak_trigger = yes
		AND = {
			calc_true_if = {
				amount = 3
				trait = kind
				trait = slothful
				trait = trusting
				trait = charitable
				trait = craven
				trait = shy
				trait = honorable
			}
			NOR = {
				trait = cruel
				trait = diligent
				trait = paranoid
				trait = greedy
				trait = brave
				trait = authoritative
				trait = ruthless
			}
		}	
	}
}
has_silver_nickname_prereq_trigger = {
	graphical_culture = valyriangfx
	NOT = { culture_group = valyrian }
}
has_old_nickname_prereq_trigger = {
	age = 70
}
has_warrior_nickname_prereq_trigger = {
	OR = {
		trait = master_warrior
		trait = skilled_warrior
	}
	combat_rating = 9
}
has_laughing_nickname_prereq_trigger = {
	OR  = {
		trait = gregarious
		trait = wroth
	}
}
is_feudal_monarch_trigger = { #i.e. has a royal title king, queen, emperor etc
	OR = {
		higher_real_tier_than = DUKE 
		primary_title = { title = d_prince_pentos } 
		AND = {
			culture_group = sarnor_group
			tier = DUKE
		}
	}
	OR = {
		government = feudal_government
		government = pirate_government
		government = wildling_feudal_government
	}
}
is_military_command_trigger = {
	OR = {
		government = military_command_government
		government = military_command_government_city
	}
}
can_use_book_trigger = {
	OR = {
		learning = 8
		trait = scholar
	}
	is_incapable = no
	NOT = { trait = blinded }
	NOT = { trait = blinded_age }
}
